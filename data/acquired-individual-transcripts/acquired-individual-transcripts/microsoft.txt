Transcript:   (disclaimer: may contain unintentionally confusing, inaccurate and/or amusing transcription errors) David:  What were you listening to before we hopped on to your walkout music? Ben: The new Beyonce. David: The new Beyonce, I haven't heard it yet. How is it? Ben: I really like it. David: Nice. Ben: I think it is reductionist to call it country. David: I was appropriately enough listening to Start Me Up through the ages. Ben: Of course you were. But I feel like a David Rosenthal move is that you might have been listening to Start Me Up whether we were doing Microsoft or not. That's a very squarely in your genre song. David: The Stones though, man, it's crazy. They're in their 70s–80s. Ben: Amazing. David: Man, I hope we're in our 70s and 80s dancing on stage. Ben: Season 126. David: Yeah. Ben: All right, let's do it. David: Let's do it. Ben: Welcome to season 14, episode 4 of Acquired, the podcast about great companies and the stories and playbooks behind them. I'm Ben Gilbert. David: I'm David Rosenthal. Ben: And we are your hosts. We often remark that selling software is the best business model of all time. Today, finally, we tell the story of the company that created that business, Microsoft. David: Finally, we're 10 years into Acquired. We're finally doing it. Ben: It's been daunting. We wanted to do it for a while, but it takes some chutzpah to tackle Microsoft. David: I'm so fired up. We're ready. It's time. Ben: Listeners, Microsoft today is sprawling and massive. It is the world's most valuable company worth over $3 trillion. They have 49 years of history making software for consumers and enterprises, making hardware, gaming systems, gaming studios, Windows apps, iPad apps, Mac apps, operating systems, mobile operating systems, MP3 players, search engines, cloud computing, services on cloud computing, programming languages, development environments, and the list goes on. But it did not start out that way. Today, we will tell the story of the desktop software company. Before the enterprise, before IT, before the Internet, before being a trusted partner to governments around the free world, and really, before people even knew what to do with personal computers, this is the story of a bunch of ragtag geniuses in their 20s pushing what was possible. Welcome to Microsoft, the PC era. Listeners, if you want to know every time an episode drops, you can get hints at the next topic and follow up. You can sign up at acquired.fm/email. Come talk about this episode with the community at acquired.fm/slack. If you want more from David and I, you should check out our second show, ACQ2, where we interview founders, investors, and experts often as a deeper dive into topics we cover on the main show. Before we dive in, we want to briefly thank our presenting sponsor, JP Morgan Payments. David: Yes, just how we say every company has a story, every company's story is powered by payments. JP Morgan Payments is a part of so many journeys from seed to IPO and beyond. Ben: With that, this show is not investment advice. David and I may have investments in the companies we discuss and likely all of you if you hold any index funds, and the show is for informational and entertainment purposes only. David, where on earth do we start the Microsoft story? David: We're right down the middle on this one. We're going to start in 1955 in Seattle, Washington with the birth of Bill Gates III or Trey as he's known growing up. It's so confusing because his dad is the second, but he goes by Senior, and Bill is Junior/III/Trey. Bill is born in 1955 as the second of three children to Bill and Mary Gates. Bill Gates Sr. (his father), is from Bremerton, the Navy town just across the sound from Seattle, where he grows up in a family that owns and runs a furniture store there, a long way from the software king of the world here. Bill Gates Sr./II, after high school, he joins the Army during World War II, serves during World War II, and then he goes, I presume on the GI Bill to the University of Washington, where he's the first member of his family to go to college. There he gets an undergrad and a law degree in four years, and then decides to stay in Seattle with his new family and become a practicing attorney. I say family because at the U-Dub, he meets and marries one Mary Maxwell. Mary, I don't know how to put it other than that she is a force. Mary's family had founded National City Bank, and her father was a senior executive at First Interstate Bank, which later became a big part of Wells Fargo. Mary, despite being the daughter of a successful business family in that day and age, was not cast aside like so many other daughters we've talked about on the show. Ben: New York Times, Hermes, where it was passed to the son-in-law to continue to run the business. That was not the case with Mary Maxwell. David: No. After she graduates from the U-Dub, she becomes first the president of the Seattle Junior League. She starts joining nonprofit boards in Seattle as a very young woman. She joins the Seattle Symphony Board, the Chamber of Commerce, the Children's Hospital, the King County United Way. She's such a force on these boards that she starts getting asked by her fellow board members to join their company's boards too. The corporate boards were so impressed with her. First, she joins the board of First Interstate Bank, the bank that her family's a part of. Then she joins the board of Cairo Television in Seattle. She even ends up joining the Pacific Northwest Bell Telephone Board. Ben: That's right, part of the AT&T breakup. David: Yeah. Eventually, she joins the Board of Regents of the University of Washington and the entire national United Way board. She never works full-time in a corporate setting, but it is not an overstatement at all to say that Mary Gates became one of the most powerful business people in the Pacific Northwest, period.  Ben: Absolutely, and Bill Gates Sr. was the prominent attorney in the region, so it's quite the power couple. David: Ben, it's like you're reading my script here. Yes. We don't want to give Bill Sr. the short shrift here either. He becomes a superstar lawyer, and he becomes a co-founding partner of the firm Preston, Gates, and Ellis, which today, I didn't even realize until I dug in the research, that is K&L Gates today, one of the largest law firms in the world. Another fun fact that you probably know about Bill Gates Sr., but we got to, this being Acquired, talk about. Do you know what corporate board he joined later in life?  Ben: I do not. David: Costco. Ben: Of course, Bill Gates Sr., we should say too, basically galvanized the entrepreneurial community in Seattle. He started the tech alliance. He was a huge angel investor. He really did organize angel investors, people who want to put high risk capital to work into startups. His heart was there, obviously, through his law practice, long before Bill Gates III became the prodigy he became. David: Totally, and that's the point we want to land here. For young Bill, Trey growing up here, he is growing up in a pretty unique household. He would later talk about being 9 or 10 years old. Most nights at dinner at his house, there would be a CEO, a senator, a governor, or somebody who's just over for dinner, and Bill would sit there and absorb the business conversation. It's like the Hermes family, the Dumas family that we talked about in that episode. This whole thing makes me think of Paul, the main character in the Dune movies in the book. He's bred from birth to be this incredible business mind. Ben: At age 13, with his best friend, who we will talk about very soon, he brought up the idea, I wonder what company I will be the CEO of when I grow up. What industry will I go after? What problems will I tackle? It wasn't a question of if, but which. David: Yes. It just turned out that He would be the CEO and founder of the biggest company in the biggest industry ever to exist. The other thing that we got to say about Bill growing up, he is insanely competitive. He did not and does not like to lose at anything. That is putting it mildly, whether it's sports, swimming, computers, school, or the classroom. There's a quote in one of the books we read from a childhood friend of his who says, "Everything Bill did, he did competitively and never simply to relax." I think this used to be more than today. There's this image of Bill Gates that he was a computer nerd, that he was this shy little skinny kid. The way he looks doesn't help this, but that is not the case at all. This guy had a competitive fire in him, I'm sure he still does like none other. Ben: Both things can be true. He was the number one math student in the State of Washington. He was a nerdy kid, a brilliant kid, and also fiercely competitive. His childhood friend and co-founder of Microsoft, Paul Allen, would say about him, “You could tell three things about Bill Gates pretty quickly. He was really smart, he was really competitive, and he wanted to show you how smart he was. And he was really, really persistent.” David: That sounds about right. Famously, speaking of Paul and where Bill and Paul meet, when Bill is in seventh grade, his parents enroll him at the Lakeside School, which now I think is internationally famous because of Bill. It is a super rigorous college prep school, middle school, and high school. Bill ends up writing the scheduling software for class scheduling that he puts himself in the classes with all the girls. Funny. This Bill, 13 years old, seventh grade, Lakeside, this is when it starts. Obviously, Microsoft doesn't start. But during that year, Bill is 13 years old, the Lakeside Mothers Club raises money to buy the school a teletype, connect it up, and rent computer time from a DEC PDP 10 that is located in downtown Seattle and owned by the branch office there of General Electric.  Probably a bunch of you are like, I have no idea what any of those words mean, so we got to set some context. This is 1968, the Beatles, Vietnam, the Summer of Love. This is not the computer age. Ben: 2001, A Space Odyssey had just come out. David: Nolan Bushnell has not founded Atari yet. Bob Noyce and Gordon Moore are only just leaving Fairchild Semiconductor to start Intel. Silicon Valley is still dominated by Lockheed. There is no such thing as a microprocessor. Ben: The United States would land on the moon one year later. David: Totally. The way computing worked back then, it was basically still the ENIAC days. A computer meant two things. It either meant a massive room sized machine that had about the computing power of a calculator, or it meant a human. People talked about computers as humans. Have you ever seen the movie Hidden Figures about the black women who did the calculations? Ben: Yes. Those women were the computers. David: They were called the computers, yes. Ben: Because they would sit there and compute. David: This was a totally different era. The idea that a 13-year-old kid in this high school, this middle school would get access to share computer time, I can't imagine there are many other secondary schools in the country that were doing this. Ben: This is a very early place to make the point. Microsoft is the result of tremendous intelligence, brilliant strategy, fierce competition, and an unbelievable amount of luck. Bill Gates was born in 1955, the same year as Steve Jobs, to come into adulthood just as the personal computer wave is starting.  The fact that he was at a middle school and had this much privilege, where he could get access to a PDP-10 at this point in his life to help him understand how important computers would become, there are dozens of people in America who are as well-situated as Bill is, and that might be overly generous. David: He and Paul got a sneak peek into the future there at Lakeside. It's funny, you said the personal computer era. We are so far away from the personal computer here. We got us at the stage. What is computing? I mentioned ENIAC and these room-sized things. Computers did not have screens. You didn't have cursors, you didn't have lights, you didn't have pixels. Everything was done on a teletype that looked like typewriters, and they were wired up remotely either in the same facility or what Lakeside is doing. You could be remote. It's almost the cloud today. Ben: And it called over a phone line. That was the teletype. David: Exactly. Got wired over the phone line, hooked up to these mainframes. You typed commands into this teletype, and then the response came back over the phone line or over whatever cable from the mainframe. It got printed out on a spool of tape on the teletype. But this is power that normal 13-year-olds don't come anywhere near accessing. What is the computing market at this time? It is pretty much—we'll come back to the pretty much in a minute—100% dominated by IBM. IBM, Big Blue, Big Iron is what it was referred to, the products that they would produce, were the industry. Ben: Ben Thompson has a fantastic quote on this. He has an article called, What is a Tech Company? And here's his comment. "Fifty years ago, what is a tech company was an easy question to answer. IBM was the tech company, and everybody else was IBM's customers. That may be a slight exaggeration, but not by much. IBM built the hardware, at that time the System 360, They wrote the software, including the operating system and the application, and provided services including training, ongoing maintenance, and custom line of business software.” David: Yeah, System 360 was a line of solutions, I would say, offered by IBM. It consisted of the room-sized thing, the mainframe, the software, which was system 360, and the consulting and the implementation. You couldn't just call up UPS and forklift one of these things into a company and expect it to work. No, you got to operate this thing too. Ben: Totally, it's like ASML machines. You don't just ship them off to TSMC and say, good luck making semiconductors. It's a full solution, full service thing. But an important thing that was also happening this year, 1968, was that IBM was undergoing some antitrust scrutiny over that huge bundle that I just told you about. Doesn't it smell antitrust? They do everything from the hardware to the software to the operating system, the service, the support. They are the whole market. They're starting to get concerned. Proactively, they unbundled hardware, software, and services. They started selling those separately for the first time, which was not a problem at first. What it did was it cracked the door for customers to say, oh, I can buy hardware from IBM and software from someone else? Other people were not exploiting this, but it was possible. David: Yeah, interesting. It cracks the door for Microsoft 15–20 years later. Ben: Yes, but this is where the seeds are sown of what is the exploitable opportunity when Bill Gates is ready to do something. David: Interesting. Back to the timing thing for Bill, Paul, and Microsoft. I mentioned when we were setting this up that there's something else to talk about here. IBM was facing a disruptive force at this moment, I think, probably for the first time in its history, certainly in the computing era of IBM's history, and that was the Digital Equipment Corporation or DEC. Noticed when we said earlier that Lakeside is renting computer time from the General Electric computer in downtown Seattle, I said it's a deck PDP-10. It's not an IBM product. What's DEC? They're the "mini" computer company. Mini meaning it was the size of a closet, not the size of a room. It's all relative. DEC had been started by this guy, Ken Olson from MIT. What they did, he had this brilliant insight that would play out over and over and over again in technology that I'm not going to go compete with IBM head on, I'm not going to make any act. I'm not going to make mainframes.  But computing has advanced enough that there's an opportunity to make something smaller, less powerful, more toy-like, and there's enough demand out there that I think they can find some new markets for people who will buy those types of computers and it’s smaller businesses. But in particular, it's branch offices of the big company.  I am sure General Electric bought lots and lots and lots of IBM mainframes and products at their headquarters, but the GE field office in Seattle is not going to truck in a mainframe. Ben: And in 1968, Seattle is a provincial little town. I'm standing here right now. It's a major city and a huge economy in the United States. But at the time, a podunk, forgotten, sleepy, faraway place. David: Totally. Microsoft would go a long way to changing that over time. Ben: We should say this is the classic low-end disruption playbook. This is what Clayton Christensen was talking about. Going from mainframe to mini computers, I'm going to make something that's worse for most things, but better for some new things that new customers and new markets are going to care a lot about. IBM's going to look at it and go, that can't do any of the things that are important to our customers. And that's exactly why it works. David: Specifically, why are they not going to care about it? I don't know exactly what an IBM mainframe system, System 360, 370, whatever cost. I'm imagining tens of millions of dollars all in total cost, maybe hundreds of millions of total dollars to run a system like that and buy it. The first DEC machine, when it comes out, the PDP-1, a few years before this time, was priced at $120,000, so an order of magnitude, maybe two below a system that you would buy from IBM. Obviously still a long, long, long way from the personal computer. People are not buying these things for their houses, but GE will buy one for the field office in Seattle, or universities will buy them for research, for their students, for their professors. DEC creates a new market for computing. Bill, he's so studied in business history, the founder, Ken Olson is Bill's hero. He totally looks up to DEC and what DEC's done. The DEC and minicomputer UI is still the same as the mainframe. You're still using a teletype. There's no innovation in terms of what computing is or how you use it. It's just cheaper and more people have access to it. Back to Lakeside and the Mother's Club raising money for this access here for the school, Bill, remember, he's just started. He's in seventh grade, and Lakeside is a middle school in a high school. The high school is actually in a separate building. The computer room that gets installed with the teletypes was over in the high school, but Bill doesn't care. He gets exposed to it in a math class one day and he's like, oh, I'm hooked. He goes over. He's hanging out with the high schoolers, teaches himself how to program, and pretty quickly he becomes known as one of the very best programmers there. He and three other kids form what they call themselves the Lakeside Programmers Group. One of his buddies who he forms it with is of course the high schooler or I think the 10th grader at the time, Paul Allen. Ben: There is a fantastic photo, listeners, that we will tweet of Bill and Paul sitting in the computer room at Lakeside. Bill, I think he's 13–14. He looks like he's about eight. I think on the wall, there's this almost printed out magazine thing that says the bug slayer that they've hung up over the wall. It's amazing. David: These high school kids, they start the Lakeside Programmers Group. They call it the programmers group because they are programmers. This is another super important thing to learn. To use a computer at this time meant to be a programmer. There was no package software that you bought. The software that IBM was selling was the operating system to make the machines actually function, and it was the programming languages that you could then program on but you weren't clicking around and using Excel or pulling up apps. Everybody who used a computer wrote their own software. Ben: Right. There was not this multi-sided network of you've got developers making applications, and then you've got users of those applications. No, everybody who used a computer was a programmer. David: The goal of the Lakeside Programmers Group, remember Bill is this business prodigy, is to use their very valuable and very rare skills as programmers at this time to make money, do a business. It turns out at the same time—the coincidences here are just crazy—there is a local startup coming out of the University of Washington called the Computer Center Corporation or C-Cubed. The business plan behind C-Cubed was that they were going to get a bunch of DECs, a bunch of PDP-8s, PDP-10s, PDP-11s, whatever, and they were going to be AWS. They were going to just be a computer time-sharing company. C-Cubed hires the Lakeside Programmers Group, these kids, to come in and find and document bugs in the system. They're going to pay them directly in computer time. When they come into C-Cubed, they learn Fortran, they learn Lisp, they learn machine language for the PDPs. Back at Lakeside, they were just using BASIC, the programming language. Ben: Which is reasonably high level in terms of how abstract it is. You're not writing machine language. You don't have to know how to address memory, registers, and all that. It reads English, it knows how to add numbers together. It's not an elegant language, and it's a very verbose language. But if you look at it with your eyes as a person who speaks English and knows basic math, you're like, I understand what this program does. There's a meaningful amount of translation done by a BASIC interpreter that takes you from the BASIC code you have to write to what is actually running on the machine. David: Yes, but BASIC, we don't want to give the impression that it is just basic or just for kids. Ben: No, it's widely used. David: It's going to become hugely, hugely important. It is both the gateway programming language for everybody, but it's a real programming language, and a lot of stuff is done in it. Ben: It's the Python of its day. I think the way Python is now where you joke that Python is so flexible, you can accidentally write a program by writing English, it can forgive a lot of mistakes, and it reads English, it's a reasonable parallel to draw it way back when with BASIC where you say, look, you can understand it as a layman, but also it's used in a broad set of business applications. David: Totally. When Bill, Paul, and their buddies come into C-Cubed, they're now getting access to learn real hardcore systems programming languages, including machine code for the PDP-10. They're becoming pretty prolific engineers here. Ben: They're handwriting assembly code. David: And they're getting mentored. One of the executives at C-Cubed is a guy named Steve Russell. Did you find this, Ben? Do you know about this? Ben: No. David: This is amazing. You're going to die. Steve Russell was the guy who wrote Spacewar when he was at MIT on the first PDP, the PDP -1. He's a computer science legend. Ben: Nolan Bushnell told us about that. David: Yes. Spacewar was the first video game, first computer game ever written. It was written as a fun side project by some MIT engineers in the early days of DEC, and then that became Nolan Bushnell's inspiration for starting Atari and Pong. Steve Russell, that guy, he mentored Bill Gates. Ben: Wow, and he was here at the University of Washington? David: He had come out to the University of Washington, and then left and was part of one of the execs starting this company. Ben: C-Cubed, wow. That's a mile from my house. David: Right? Crazy. Ben: Wow. David: After a little while at C-Cubed, all of this real expertise that these kids are getting leads to another opportunity at another timeshare computing company based down in Portland. They ask the kids to write a real piece of software, to write a payroll billing program for all their clients that are using the timeshare system. Bill now, who's the de facto leader of this group, negotiates a deal with the help of his dad, Bill Gates Sr. prolific corporate attorney in Seattle. Rather than just being paid hourly for their time, they're going to get a royalty on the revenue that their client makes off the software. I can't believe it. These kids are teenagers. They're figuring out the whole software business model here. They end up making at least $10,000 from these royalties, which the average household income in the US at the time was below $10,000. These kids are rolling in money. The next year, Paul graduates from Lakeside and goes off to college at Washington State. He and Bill decide to team up on a new venture that they're going to do together called Traf-O-Data. Ben: They've identified a market opportunity, and that opportunity is reducing traffic. David: Yes. The business plan is that municipalities count cars that go through intersections, use that to make decisions about how they're going to do city planning. Bill and Paul are like, we can take this new thing that's coming out of Intel, a microprocessor, which is promising to be a full computer on one chip. We can use that. We can build a machine that is going to be a computer, and it'll process and analyze that data, and then we can sell it to governments. Great, big market. Ben: Listeners, are you sensing what's happening here? Mainframe, mini computer, microprocessor. We have to keep using smaller and smaller words to represent the fact that the computer is getting smaller and smaller here. David: It wasn't until we started doing research for this episode that I finally realized, oh, microcomputers, which is the original term for the personal computer for the PC. It was called microcomputers before PC caught on. They're called microcomputers because they're based on the microprocessor. Ben: Yes, absolutely. David: It's not just that micro is smaller than mini. Ben: It is funny that it stopped there. The computers that are sitting on all of our desks are microcomputers. David: Right. While they're waiting for the AD08, this new first microprocessor from Intel, to come out, or at least for them to get access to it, they want to get a head start on programming their traffic data machine and programming this microprocessor. Paul's like, I got this. I can find a way to make this happen. He takes the PDP-10 at Washington State and he writes a whole emulator program to mimic the instruction set for the AD08 from the manual. They get a full emulator up and running, and they can code even without the microprocessor actually being there. It's just NVIDIA. When Jensen was like, no, we got to build an emulator and simulate this, and then we're going to ship it sight unseen, they're doing the same thing. Ben: It's funny. In many ways, at this point in history, getting a manual was actually much more valuable than getting the processor itself because the processor would arrive. Unless there was documentation, you would have no idea how to interact with it to take advantage of its power.  If you had a manual, sure, you couldn't actually test the stuff you wrote for it on the hardware. But if you wrote an emulator on a bigger, more powerful computer that could mimic the computer that you're actually targeting, you could go years before actually ever running the software on the target device and just work off of what the manual says as long as the manual is correct and matches how it actually works. David: And this is going to become very important to Microsoft in just a second. Traffic data is not a huge success. I think I read a few places, they make about $20,000 in revenue from it. Again, great money for high school and college kids, but not world-changing stuff here. This is not what Bill aspires to for the company he's going to start. Bill and Paul are getting experience with the microprocessor. Bill actually has the idea for Microsoft when they're working with it. He's like, oh, this is a computer, why don't I go off and write an interpreter for BASIC here, and we can sell the BASIC interpreter for the microprocessor and build a big business? The AD08 just wasn't powerful enough yet to do that. Ben: But spoiler alert, that totally becomes Microsoft. The seeds of Microsoft are selling language interpreters for new processors, new hardware, new computers that enable you to write familiar programming languages on that new hardware. David: Yup. Bill and Paul are not the only ones having this insight here, too. Another Seattle guy named Gary Kildall who they had intersected with, who they knew from C-Cubed and the University of Washington, had the same idea here. We're going to bring up Gary and his company, Digital Research, a little bit later. Ben: Yeah, he cared a little bit less about programming languages and a little bit more about operating systems. That's how they diverged for the few years here. David: Bill and Paul absolutely see the vision for what this can grow into and become. Bill has a great quote. "Paul and I had talked about the microprocessor, and it was really his insight that because of semiconductor improvements, things would just keep getting better. I said to him, oh, exponential phenomena are pretty rare, pretty dramatic. Are you serious about this? Because this means, in effect, that we can think of computing as free. It was a gross exaggeration, but it was probably the easiest way to understand what it means to cut costs like that. And Paul was quite convinced of it." Ben: Is this in the Smithsonian interview? David: Yes, so good. Ben: It's so good. This quote is incredible because basically, Paul Allen brings up Moore's Law to Bill Gates; they don't use that language there. But in 1971, that is what's happening. For Paul, this is just an observation of hey, there's an exponential thing happening here, it seems like it's going to keep happening, it's been happening. Bill's shaking and he's like, what? Exponential phenomena don't just happen. That's incredibly, incredibly rare and immediately gets Bill's wheels turning on. What does this mean for the world? If that's actually true, we need to act and do something profoundly different than anyone's ever done before because this enables new things that no one ever thought could be possible. David: This moment is the genesis of the vision for Microsoft. Even though Bill doesn't say the words in this quote, the vision of a computer on every desk in every home, that's the famous part that got left off later when the DOJ started sniffing around was running Microsoft software.  But that is the vision here, and it is crazy at the time. A computer on every desk and in every home, Bill sees that this is what this exponential phenomenon, what Moore's law means, that that is going to happen. We're still in the era of teletypes. Nobody else sees this. Ben: And it's also the reason why Microsoft is going to form into such a different type of company that's ever come before it, why they can break all the rules, why they can sell just software, even though that's never been a thing before, why their business model can be so much different than everyone else's business model.  In preparing for this episode, we got to talk with Pete Higgins, who ran Excel and was an executive overseeing Office for a long time in the early days. He had this great quote to us, which was, "Computer on every desk was wackadoo stuff. People laughed at it. It was absolutely wild. People thought, I don't know, maybe 1 in 10 people in their finance group or something will have one at some point. This is the profoundness of an exponential decrease in price or increase in power of computing. It's going to become universal." David: All that said, even Bill and Paul know the AD08. It's not there yet. It's not powerful enough to really be a general-purpose computer on a chip, but they know it's coming. In the fall of 1973, Bill goes off to college at Harvard famously. It's funny, at Harvard, like Jim Simons that we talked about at MIT on the RenTech episode. Bill thinks he's going to be a world-class mathematician and set the world on fire. Ben: It's literally a quote from Paul Allen. Bill was the number one math student in the state of Washington. He gets there, and he does this theoretical math class, math 55 and gets a B. Paul says, when it came to higher mathematics, he might've been one in a hundred thousand or better, but there were people who were one in a million or one in 10 million. And some of them wound up at Harvard. Bill would never be the smartest guy in the room, and I think that hurt his motivation. He eventually switched his major to applied math. David: Yes. While Bill's at Harvard, he's also doing a bunch of the typical college kid stuff. He's playing poker, he's cutting classes, he's making friends. One of the friends he makes there is a kid down the hall from him named Steve Ballmer. Everybody knows Ballmer. He's everything that Bill is not. He's super social, he's super outgoing. He's in a final club, which is a big thing in the social scene at Harvard. Ben: He's gregarious. Anyone who's ever met Steve or seen a video of Steve, you are well aware that this man has a presence. But the thing that people don't know about him is he is so unbelievably analytical. Steve is the guy that outscored Bill Gates on the Putnam exam. David: Which is the annual math competition for college students. Ben: Yeah, Steve isn't a programmer, but he is every bit the mathematician that Bill Gates is. That is one of these things where I think when people try to set it up as well, you've got the brilliant programmer genius and the marketing guy, it's just like those are the roles they took. But I think when you're getting a sense of who the original crew was at Microsoft, they were all brainiacs, and they were all wildly analytical. David: Totally. In the spring of 1974, Bill's freshman year, Electronics Magazine publishes big news about a new Intel chip, the next generation, the next turn of the crank on Moore's Law, the 8080. In Bill's words here, all at once, we were looking at the heart of a real computer, and the price was under $200. We attacked the manual. I told Paul, DEC can't sell any more PDP-8s now. It seemed obvious to us that if a tiny chip could get so much more powerful, the end of big unwieldy machines was coming. Ben: Yup. This is really where Bill Gates commits to computers to be his life's work. I think what's often lost in the story is Bill, even though he was good at computers and spent tons of time programming computers, never fancied himself a computer guy until this moment in history. He went to Harvard because he felt, hey, if I ever want to be a lawyer or something else, they've got a lot of great programs there. This was the moment where I think it really clicked for him that I'm just in the middle of the right place at the right time with the right skill set, and this is my way of having the most impact on the world. David: They think, okay, what's clearly going to happen here is all the big computer companies, IBM, DEC, the big Japanese computing companies, they see this. They're going to get into this business, they're going to make machines, and they're going to make microcomputers. Surely, they will jump on this opportunity, right? Ben: If it didn't destroy their existing business model, sure they would. David: Exactly. Bill and Paul are sitting around waiting through 1974 and 1975 being like, hey, when are the 8080 computers going to come out? Where are they? It's just crickets. Paul is so convinced that the revolution is coming that he actually drops out of Washington State, moves to Boston to be close to Bill so that they can be ready when it happens. That summer, they both get summer jobs at Honeywell as programmers. Paul stays on into the next school year when Bill goes back to school. He's just waiting, waiting, waiting. In December 1974, Paul is walking across Harvard Square, and he sees in a newsstand the January issue of Popular Electronics, on whose cover is the Altair 8800, the world's first real honest-to-God commercially available for sale microcomputer. The legend has it that Paul grabs the magazine, runs over to Bill's dorm, throws open the door, throws the magazine on the desk, and is like, it's here. Bill's just says, oh, my God, it's happening without us. We need to get on this right now. Ben: It's so funny he thinks they're already behind because clearly they're not. History would show. I think Bill Gates even says, we might've actually started a year or two too early. The market actually hadn't materialized yet. The funniest thing is, the starting gun went off, Bill and Paul ran, and everyone else is still standing around. David: This is it. This is the moment. The revolution is here. Microsoft is about to be founded. But first, this is a great time to thank our presenting partner this season, JP Morgan Payments. Ben: Just like Bill's vision of Microsoft to put a computer on every desk and in every home, JP Morgan has a vision for making payments real time, 24/7 everywhere and in every currency. JP Morgan has experienced a massive digital transformation, and is now much more than just a global bank. They invest $15 billion a year into technology and R&D. With JP Morgan Payments, you are getting their history of service, stability, and scale, but also innovation and new technology. David: Scale is really the key word here. Every episode, we talk about Hamilton Helmer's seven powers, and boy, does JP Morgan have scale economies. What's unique about their position in payments is that they can make massive infrastructure investments that benefit their customers in the near term, in addition to the long-term technology bets like blockchain or quantum computing. Since they move $10 trillion a day in 160 countries, these investments create a lot of shared value across their large customer base. Ben: Yeah, not to mention the second of the Seven Powers' network economies. David: Yup. If you're a JP Morgan payments customer, whether you're a startup or a Fortune 500, you can access their payments partner network. This is a set of third party integrations across virtually every industry and payment use case. It makes it easy to discover what specific set of tools are best for your business. Ben: It's basically a B2B marketplace that connects their clients with the broader payments and technology ecosystem such as treasury management systems, ERPs, point of sale hardware solutions, payment gateways, and so much more. Given JP Morgan's scale, you can imagine the value that comes with unlocking access to their industry leading partners and technology. David: Let's take Visa, for example, which listeners may remember. We talked a lot on that episode about the power of a network. Visa works with JP Morgan to provide global payment processing services. Now through the partner network, you can easily add Visa as an acceptance method through a streamlined implementation with consolidated reporting. Other companies in the partner network include Oracle, American Express, MasterCard, Accenture, and many more including friends of the show, Modern Treasury. Ben: Across any industry, the most successful companies we've talked about are the ones who think and invest strategically through a long-term lens. Like Hermes, durability and reliability are paramount for building hundred year companies that can reinvent and continue to grow. That is the case for JP Morgan Payments. Their history of trusted solutions and investments in technology bring clients and new fintech companies together to drive innovation and growth for businesses of all sizes. David: Before we jump back into Bill and Microsoft, who essentially wrote the modern playbook on building platforms, be sure to check out jpmorgan.com/acquired or click on the link in the show notes. Ben: David, they're like, it's happening without us. What do they do? David: They do the natural thing that two super excited, ambitious, high octane college kids would do. They call up the main phone number of Altair's manufacturer, a company called MITS and ask for the president, a man named Ed Roberts. Bill and Paul get them on the phone and they say, we have a BASIC interpreter, ready to go, ready to ship, for the 8080 Intel chip, and we want to provide it for you, for your machine. Ben: Of course they don't. David: They don't have a single letter of code written. They don't have anything. Ben: It's a market test. They want to know what's the response if this were true. David: Exactly. Ed's a bit of a character himself. He says, okay, well, guys, a lot of other people are calling me and saying the same thing. What I'm telling them, and I'm going to tell you too, is that anybody who can come here to my office in Albuquerque, New Mexico and demonstrate a working version of BASIC on my Altair will get a contract with us to distribute it when they go on sale. Bill and Paul say, okay, great, we'll see you soon, and hang up. By ‘see you soon,’ they mean, ‘let's go get to work.’ Ben: This is a big deal for MITS too if this works, because right now they've just announced a machine for which you can't really do anything on it. The hardware is powerful, but they're not going to have a lot of customers unless there's stuff you can do on the machine. A BASIC interpreter running on it, it's quite valuable to then make the claim you can program BASIC on our computer. They're very excited about this, even though they're playing coy. David: I was going to talk about this in a minute, but let's talk about what the Altair is. What did they just announce in the magazine here? The Altair is the first mass market commercially available personal computer. Ben: Again, no screen or anything. David: Yeah. Does not have a screen, does not have a keyboard, doesn't have a display of any kind. What it does have is it has a set of 16 lights on the front of the machine, Christmas lights and 16 switches. You can flip the switches to flip bits, and then the machine will respond by lighting up different patterns of lights. It doesn't come with any software. There's nothing. That's all it is, 16 lights, 16 switches. Ben: In order to use it, you got to hook up your own teletype, you got to get the manual, you got to hope that the manual is right, and you got to code to the machine instructions, literally the assembly language for the chip inside for the Intel 8080. David: Back to the Traf-O-Data days and Paul writing the emulator for the 8008 at Washington State, Paul's like, we got this. I'll just write an emulator on the Harvard PDP-10 for the 8080 instruction set. Ben: He does the same thing again. They get the manual, they have an emulator, and they write it against an emulator. David: Yup. Bill writes the BASIC interpreter. In a couple of weeks, they've got it working. Ed's like, okay, come on out to Albuquerque. Bill and Paul—remember, Bill still looks he's 12 at this point in time—decide that just Paul should go. Ben: Does Paul have a rocking beard at this point yet? David: Paul is super 70s. He is into it. As we'll see, he's going to fit right in at Albuquerque and MITS. Paul gets on a plane, flies from Boston to Albuquerque. In a total epic legend moment, they didn't have a bootloader written for the BASIC interpreter. They had the BASIC, it was all written, they'd done it on the emulator, and Paul's flying out with the computer tape with the code of the BASIC interpreter on it. He's like, oh, shoot, we can't just feed that right into the machine. There's got to be a bootloader to load up this thing. He writes the bootloader on the plane. Ben: On paper, by hand, he is hand coding octal, not even assembly language instructions. He's hand coding in pure octal the instructions to load their BASIC interpreter program into memory. David: Yup. He lands in Albuquerque, drives out to MITS. They load the bootloader onto the prototype Altair there that loads up the BASIC interpreter, and it fails. It doesn't work. Paul's like, oh, shoot, let's try it again. Let's try it again. They try it again. This is how early computing is. It works the second. Who knows what the bug was the first time. They didn't change anything, it just didn't work the first time, and it worked the second time. It loads up, Paul writes in the instructions, print two plus two. It spits out four—by spits out, I mean the lights light up and say four. Both he and Ed, their jaws are on the floor. Paul's like, oh, my God, the BASIC works. Ed's like, oh, my God, the Altair works. Neither of them believed this was actually going to work. Ben: Ed actually has more eggs in this basket than he let on because when Bill and Paul call and say, hey, can you give us the teletype instructions, he reveals they're actually the only ones who called about that. Everyone else who said they were writing a BASIC never got far enough to ask, how do we actually interact with your computer? David: Yes. Now is the time to say a few words about Ed and MITS. What is this company? Bill and Paul originally thought that it was going to be the IBMs, the DECs, the Japanese companies who are going to make the first microcomputers. MITS is about as far away from IBM as you can possibly imagine. MITS basically was a model rocket company. Ben: Which, Albuquerque is a great place to do that. David: Ed Roberts, the founder, had been in the Air Force and stationed in Albuquerque. That's how he got involved in model rocketry. The reason that they're introducing the Altair and they made this big Splash in the magazine was this is a last ditch gambit to try and save the company. You got a bankrupt model rocketry company. Ben: Their little gambit worked and got a couple of college kids to pounce. David: Totally. Why did it work? They had two things going for them that really, Ed, I think probably personally made happen. (1) They got this splashy popular electronics magazine cover that was through a relationship that Ed had. (2) The sticker price was $397, which is about $2300 in 2024 dollars. Yes, that's a lot of money, but the next cheapest computer that anybody could buy at this point in time was a DEC, a $120,000 mini computer. The idea that somebody could buy a computer for $400, I don't care who's selling that thing, I want that. Ben: What did they get, some sweet deal from Intel? David: Yes. This is all Ed's doing. The list price from Intel for the 8080 chip was $360. I think this is part of what was deterring the market of how would anybody sell a kit that was affordably priced when so much of the cost of goods would go to Intel with the processor deal. He managed to negotiate a volume deal with Intel to get 8080 chips at $75 a pop. That was the key unlock. Ben: That's a 5X price reduction. David: Totally. I wasn't able to find how that negotiation went down or why Ed Roberts in Albuquerque, New Mexico got this sweetheart deal from Intel. Ben: Either the list price is wildly wrong, or they were cutting deals all over the place. One thing it could have been is just that, and I'm totally speculating, but chips are the ultimate high fixed cost investment, low marginal costs next to software.  You could imagine maybe Intel had already put all the money into the fixed costs of spinning up the fabs and was expecting a certain amount of market demand, and they weren't seeing it. They were like, crap, we've got to recoup our investment. I don't know, lower the price, let them just sell. Maybe we'll make it up in volume. David: I like that. I have no idea, but that's a totally viable train of thought here. Either way, he gets the sweetheart deal. Not only does it make computer history and enable and create Microsoft, it saves the company of MITS. They were on the edge of bankruptcy. After the popular electronics article comes out, they get 4000 pre-orders in the first month or two, which is $1.5 million in revenue, cash paid upfront. That is pure cash hitting the bank account. Ben: That will save a company. David: And also just proves 4000 people just paid cash sight unseen for 16 lights and switches. There's a lot of demand for a home computer here. Ben: At decent margins too, if they're getting the processor for $72, and they're selling it for what did you say? David: $397. Ben: Everything else in there is much cheaper than the processor, so I don't know. Depending on how much they have to give to the sales channel they're selling through, if it's retail or distributors. David: I think they're selling direct. I think people are just sending money orders. Ben: It's a decent margin business. Unlike what the PC business would become over time, they managed to have nice margins. David: Paul and Ed hit it off. Paul decides to move out to Albuquerque to be close to the action here. He actually joins MITS as their vice president of Software. He's vice president of a software department of one. He is the software department here. Ben: Yeah, software department of one, but he's got his buddy Bill Gates who is not employed, but Bill's definitely working on software for the Altar as well. David: Yes. Bill stays at Harvard, but keeps cranking on enhancing the BASIC interpreter and adding more functions and functionality to the version of BASIC that they had just written for the Altair. Once the school year is over, he comes out to Albuquerque for the summer. The Altair is getting ready to ship with the Microsoft BASIC included in it. Bill and Paul need to set up a company, but Paul is an employee of MITS at this point, so what did they do? They set up a partnership. The founding of Microsoft, at this point Micro-Soft, is a two-person partnership between Bill and Paul. Ben: As we record this, that was 49 years and one day ago. We are sitting here on April 5th recording. That was April 4th, 1975. It is very funny to look back at some of the original signatures when Bill writes on letters. It's Bill Gates, the general partner of Micro-Soft, which is great. I think it's actually a Paul Allen name where he wants to put together microcomputer and software. Bill's like, that's perfect, we're immediately just going to run with it. As it was a partnership, originally, they were going to call it something like Allen and Gates, and then they ultimately are like, no, Micro-Soft is perfect. David: Microsoft has become Kleenex. Microsoft means microprocessor software. Ben: I will say it's a nice clarifying North Star because it really draws the line in the sand and says, we're in the software business. Gates makes this really clear to Paul Allen, who is often tempted to do hardware stuff. Bill is very hardcore about saying, no, what we're uniquely good at in the world is software and we should stick to that.  I also suspect Bill is starting to realize that there's an amazing business model here if we can pull it off, where we don't have to make the hardware, and we can charge for every copy of the software sold. But that insight, I would say, has not yet fully materialized. David: Let's talk about business model here in one sec. First though on the partnership. Again, we've been saying all along that Bill is clearly the leader here. They set up the partnership. Initially, it's 60/40 ownership, Bill is 60%, Paul is 40%. Later, it gets changed to Bill is 64% and Paul is 36%. Yup, Bill is the leader here. Ben: Bill's case that he makes on that to Paul is, hey, you took a job and you were doing this on the side, I was all in. Paul's an agreeable guy, and 36% is still a nice percent, so he says, sure. David: In the long run here, everybody gets nuts. It's all a rounding error, but to that point back to the business model. Once the partnership is set up, they sign an exclusive licensing arrangement with MITS. This is super important. This is a big lesson that young Bill and Paul are going to learn here. MITS gets exclusive license to the BASIC interpreter to the BASIC as they call it for the 8080. MITS is the one that can then decide whether to sublicense the BASIC out to other companies or not.  Essentially, this is a distribution deal with MITS, where MITS becomes the exclusive seller and distributor of Microsoft's BASIC. Microsoft doesn't have any direct sales control here, and it's going to become a big, big, big issue. The terms of the deal are Microsoft is to get $30 for each copy of BASIC that MITS sells plus 50% of the revenue that comes from the sublicensing deals that MITS may or may not do with other companies who want to use the BASIC. Ben: Why would they ever do any sublicensing deals? Why would you give it to your competitors? David: That is a really good question, Ben. Ben: Let's just round that part of the revenue to zero. David: Yeah. This is a big, big, big divergence of interest between Microsoft and MITS. The kicker on this contract is that the total amount of lifetime revenue that Microsoft can make from the BASIC from MITS is capped at $180,000. Ed admits really has the upper hand in this deal. Ben: Or phrased another way, we will give you $180,000 for you to hand over exclusive rights to all that cool BASIC stuff you just wrote to us. But if we sell fewer than X machines, we're actually going to pay it out to you on a prorated basis at $30 a pop rather than giving you the full $180,000. David: That is another way to frame it. Definitely, a great deal for MITS. On the other hand, what are Bill and Paul going to do here? Ben: Right, a great deal for them too given the position they're in. David: Right, MITS is the industry. There is one very, very important clause in the contract though, protecting Microsoft's interests. That clause is that MITS must use its best efforts to license, promote, and commercialize the BASIC broadly in the marketplace. Any failure to do so by MITS would be grounds for termination of the contract by Microsoft. Ben: Thank God, Bill's dad is a lawyer. David: Indeed. The Altair comes out for sale later in 1975. Microsoft does $16,000 in revenue that year from their $30 a pop, the BASICs that are getting sold with the Altair, which is great, especially the first year that they're starting.  The next year in 1976, everybody's so excited about this new market, the vision that's happening, the demand, the Altair, the sales that Paul Allen resigns from MITS to join Microsoft full-time. Bill drops out of Harvard officially. He moves to Albuquerque. They're all in on this. But for the year in 1976, Microsoft's revenue is still only $22,000. It was $16,000 the year before, $22,000 in 1976. Ben: Not a high growth company. David: This is less than they were making in high school. What is going on here? (1) MITS is the one at the controls of sales, not Microsoft. (2) MITS is selling a thousand computers a month. This is taking off. This is creating a new industry. Despite MITS selling thousands of computers a month, only a few hundred copies of BASIC are selling per month. What's going on? People are pirating the software. This is the discovery of software piracy. Ben: This is a pretty interesting time to pause and say, are they pirating software? David: That's a good question. Ben: This is 1975. Piracy implies that you are running afoul of some particular legal protection for the good. You might say, well, with today's legal frameworks in hindsight, you would say, of course, if they're copying the software and not paying the money for it, it's piracy. That was actually not established yet. This is the craziest thing. Bill basically has an opinion that it's piracy, and he writes letters to the computer community. David: He writes an open letter to hobbyists. Ben: Yes, and tries to basically guilt trip people. He tries to use that as a recruiting method and say, if you're so excited about pirating our software, maybe you should just come work with us. Nothing would make me happier than making the best software in the world, and please join us on this mission. But ultimately, the legal standing that he has to say, hey, what you're doing is illegal, is not fully established. It would actually take a couple of years for the courts to look at software and say, what about this is protectable? If you think about it, it is a little bit weird. You've got source code that looks like English, BASIC, it's letters and numbers. It gets translated to machine code. That machine code ends up running, and it's basically electrons. It's voltages that are flipped up and down. What about that are we trying to protect?  Ultimately, the way it gets litigated through some case law from court cases is that the source code is a copyrightable, creative work that is expressed through some tangible medium. That's the important thing about copyright law. It's a creative work expressed through a tangible medium. A book, the creative work is the words and the tangible medium is printed on paper. With software, it actually took until 1980. Congress changed the law. We'll put a link in the show notes to the literal congressional change that happened. It is in Title 17, Copyrights Chapter 1, Subject Matter and Scope of Copyright. In 1980, they include a defined term, which is a "computer program is a set of statements or instructions to be used directly or indirectly in a computer in order to bring about a certain result.” Once you have that passed by Congress codified into law, you now have the standing legal framework that all the whole computer industry used going forward, in particular, the software industry, a computer program is copyrightable work. David: Wow, I didn't know all, that's awesome. Ben: It's totally crazy how recent that is. But when you think about it, why would that have any legal…? Software is such an abstract idea. Before, the whole business model of computers was good luck just replicating an IBM PC and everything that comes with it. You don't need any legal standing. But if you're going to pursue this software only business model, what's the protection around your abstract product? David: That's exactly what I was going to say here. This is the other element of what's going on. This is the first time software has ever been sold. Other than the IBM accounting machinations to protect themselves from antitrust, which was just accounting, nobody had ever sold software before. This is the first time. Ben: Certainly to build a legitimate business around it. The other thing that's useful to know is when you're selling an IBM PC, you're literally selling a PC to a customer the same way that when I'm selling you this glass. From crate and barrel, I am selling you the glass, and the glass is now yours. I've transferred property to you. Software is not that, so the whole world of software is built on a license agreement. The source code that computer program the actual right of that is retained by the creator, and you license the copyright to your customer to be able to use that on their machine.  There's this dual idea that computer software is copyrightable, and you can grant a license under certain conditions for customers to use it. That is the legal framework for which the next 50 years of technology at large would operate under. David: For the moment though... Ben: They have a piracy problem. David: Right. The law isn't going to change until 1980. Microsoft would be dead if they didn't figure out a solution to this before 1980. This is when Bill ultimately realizes, shoot, we did the wrong business deal with MITS here. MITS has to sell, and customers have to make the decision buy our BASIC. It's a key critical part of the value of the computer. It's the whole thing. Ben: It makes that machine useful. David: Without it, it is not useful. It's totally setting up the wrong incentives and value equation that customers should be buying this themselves. It should be included by the hardware OEM in the machine that they are selling and in the total purchase price. If that happens, We no longer have a piracy problem because we're just getting paid as part of the purchase of the machine. Ben: Right, it should be a royalty. David: Right. The problem is that is not the deal that they had with MITS. Ben: Right, or framed differently. Instead of saying, hey, consumer, do you want to buy something else too and make a new purchase decision, they should be saying, hey computer manufacturer, we make your thing actually useful, so pay us for it. David: Yes. During 1975 and 1976, MITS pretty much had this new microcomputer market all to themselves. There were a couple of other competitors who sprung up, but nothing made. The Altair and MITS was the microcomputer company.  All that changes, though, in a big way in 1977, when what Byte Magazine calls the 1977 Trinity hits the market. That is three machines, the Tandy/RadioShack TRS-80, the Commodore Personal Electronic Transactor, or the acronym PET, and the Apple II. All three of which machines were like the Altair, low cost, mass market. Unlike the Altair, they were not kits. They were fully assembled, fully functional, right out of the box, and they each had their own major distribution advantages. In Bill's words, these three machines, the 1977 Trinity, ignite volume in the market. Bill loves these really dramatic verbs like we attacked the manual, they ignite the volume in the market. Ben: The press just latches on to him. Whenever Bill has a leaked memo or something where he talks about all this war terminology, those all become headlines. David: It's so great. Earlier, during 1976, Microsoft had started getting approached by a few of the bigger computing companies NCR (National Cash Register), GE, Control Data Systems. I want to license Microsoft BASIC for the 8080 microprocessor here so that we can experiment with these things. Each of these deals would have been revenue to Microsoft of $100,000-ish. Ed and MITS, they keep dragging their feet on negotiating these. They've got the exclusive license. Everything's got to go through MITS. Most of them are turning down because Ben, you said, they don't want anybody to come in and compete with them. Ben: Yup, there's the misaligned incentive. David: There's the misaligned incentive. There is the clause that Bill and Microsoft, and I presume Bill Sr. put in the original agreement—is MITS is using its best efforts to commercialize the BASIC and gain adoption in the market? You can make a pretty strong argument that they're not. Ed, though, unbeknownst to Bill and Paul, has another reason that he's dragging his feet on these deals, which is that he's about to sell the company. In May of 1977, MITS gets acquired by the tape drive manufacturer, Pertec, for $6.5 million. Ed rides off into the sunset. Pertec knows about this dispute with Microsoft, and they come in and they figure, who is this Bill Gates? He's a 21-year-old kid, a college dropout, we're a big company, we can deal with this. Robert says an amazing quote later. He says, "Pertec kept telling me they could deal with this kid. It was a little Roosevelt telling Churchill that he could deal with Stalin." Ben: Oh, my God. David: I also don't think they realized that this kid's dad is one of the best corporate attorneys in the country. Ben: Bill Gates was just constantly underestimated, which worked to his advantage in those early days. David: Totally. Ben: This is the thing about Microsoft. People forget how insanely young Bill was. He was just 20. To put that in context, he's only 7 years older than Jensen Huang, but they feel an entire generation apart since Microsoft was started almost 20 years before NVIDIA. When you start bending your mind around like, oh, Bill Gates is still pretty young, considering what an institution Microsoft has become in the world. David: Right. Microsoft next year is going to have its 50th anniversary. I believe that'll also be the same year that Bill turns 70. That's wild. Ben: Yeah. David: That fall in 1977. The dispute between MITS/Pertec and Microsoft goes to arbitration in Albuquerque. The interim months while this arbitration is happening are the only moment in Microsoft's history where cash gets tight. They're running out of money because they can't really make any sales here. Ben: They don't control their destiny. David: People aren't paying MITS for the BASIC. They're "pirating" the software. They can't do deals with all the other computer companies that want to come licensed directly, so things get a little tight. Microsoft ends up winning the arbitration, I believe, in maybe November 1977, meaning they are now totally free to license BASIC to anybody who wants to buy it on any terms that they want. They turn around. They immediately license it to Trinity, Apple, Commodore, Radio Shack, and Tandy. They license it to all the big companies, the GEs, the NCRs, who want to experiment with microcomputers. There's a really funny story with Apple that apparently, Woz had more or less written 95% of their own BASIC. But it didn't have floating point numbers, it only had integer numbers. Jobs is totally writing Woz. He's like, the BASIC is really important. Can you just finish it? Can you do floating point? Woz just doesn't do it, so Jobs has to go license Microsoft's BASIC. Amazing. Ben: That's the first deal that happens between the companies. There's so many deals done, both directions, commercial deals, equity deals, legal disputes in both directions. This is the very first time that they do something together. David: Yup. Bill, Paul, and Microsoft, do all these deals. They do them all as cash upfront, fixed cost, all you companies, you're going to pay us. You include the BASIC in the machines that you're selling, and we're going to get all the money up front. Super presciently, though, Bill does not value maximize on these deals. The Apple deal is $31,000 for eight years of access for Apple for the Apple II Microsoft's BASIC. They're not price gouging here because Bill sees, he's like, the play here is we want to make it a no brainer for everybody who's selling a microcomputer to have Microsoft's BASIC on it, because we want to set the standard. If we are the standard programming environment that anybody who's using these computers—and again, anybody who is using these computers is programming them, they're used to the Microsoft version of BASIC—we're going to have so much power that it'll become a self-fulfilling prophecy. All of our competitors will just wither away. Nobody will want them because it's not going to be compatible with the language everybody knows. Once people start trading and then ultimately developing and selling software that they've written, it's only going to run on our BASIC interpreter, not anybody else's. Ben: Fascinating. I actually didn't know that it started this early. One correction there, you don't know for a fact it's only going to run on Microsoft's BASIC interpreter, but you do know for a fact that it will run on Microsoft's BASIC interpreter. If it's cheap enough, why would you take the chance on a clone that might have one or two things wrong with it? David: Yes. Basically, his vision is, I want to remove any oxygen from any argument anyone could have about not using Microsoft's BASIC on a microcomputer. He thinks about this concept as a positive spiral that he really in his mind is the reason for Microsoft's success. He says, “Success reinforces success. In a growing market, one way of doing something gets a slight advantage over its competitors, this is most likely to happen with high technology products that can be made in great volume for a very little increase in cost.” If you get that slight advantage, it'll compound, and this is what he's playing for here. Ben: It's interesting. In the earliest days, what was stopping someone else from writing a BASIC interpreter and licensing it to Apple or RadioShack? Nothing. There were other smart people out there. It was just a very good business decision to say, we got to close that door. We just got to make this a no-brainer for people to buy from us, because if we're value maximizing and it's starting to feel expensive, they're going to turn elsewhere until we get a lead. David: The Apple story is the perfect example. The Woz thing is cute, it makes for a good story, and oh, he didn't finish the BASIC. But when Microsoft sold them the BASIC, which was already getting established as the standard for $31,000... Ben: Sure. Why not? David: No brainer. Apple could have gone out and hired another programmer to finish the BASIC. They're like, wait, we could do that, or I could just get the standard one for $31,000. I'm going to do that. Ben: Just because it's important to establish there are trade offs for everything, if you're running a startup right now, you might think to yourself, oh, great. I'll just run that exact strategy. The important thing here is (a) Most of the work was already done for the original BASIC. (b) Bill was doing it himself, Bill and Paul, so the importance of technical co-founders. Their overhead was crazy low. They could do these deals where they don't make very much money. I think at the end of 1977, there were five employees. Their overhead was just so unbelievably low that they could take a really long lens. David: Even though it takes until the very end of 1977 when the MITS dispute gets resolved and Microsoft can actually make money again, they end 1977 with $381,000 in revenue, despite zero for the first 11 months of the year. They're just rolling in cash. This is when Bill famously goes out and buys a green Porsche 911 and is motoring around Albuquerque, getting all sorts of speeding tickets and hilarious stuff. Ben: This is when he got his mugshot, right? David: Yeah, I think that's right. Ben: This is the classic Bill Gates holding up the... David: Yes. Amazing. Ben: He got, I think, three speeding tickets in one day, two of which were from the same police officer. David: Yeah, and there are funny stories of the Albuquerque police thought, how is a kid driving a Porsche 911? He must be a drug dealer or something. Ben: Even when he was 20–21, he looked 17. David: Right. It's like, do you even have a driver's license? Ben: Wild. David: Back to what you're saying, it's a really, really important point. To make this dynamic work, you need to be able to afford the investment in the fixed cost for the software, for the technology to make it that little bit superior, like Bill's talking about, the slight advantage over the competitors. At this moment in time, the industry is completely brand new. The software industry is brand new. The amount that that fixed costs takes, the cost is quite low. Really, it's just Bill and Paul's time and dedication to this industry that nobody else is making that investment. You can't run this playbook today because in any market, even a brand new market, even a speculative market, the minimum viable fixed cost is billions of dollars. Ben: Right. Yeah, that's interesting. I also think this moment galvanized something important, which is Bill and Paul could look around and see that there is going to be so much value created by microcomputers and by software. They really found religion around software is magic. The things that people can create now that we've done this BASIC interpreter and these machines are cheap and plentiful. The magic will take care of itself as long as we ensure this industry can just exist and do its thing. They flipped from this mode of we need to bite and scratch and claw, and make sure that we win in deals to, huh, how can we enable software as a thing to thrive? I'm sure we can position ourselves well to capture some or a lot of that. I think they became almost stewards of the software industry and evangelists from this point forward. David: Yes. They also do another really prescient thing the next year in 1978, which is they go global. Ben: Yes. David: Nobody else is going global yet, and the way that this happens is so fun. Bill gets a call one day. Ben: Also, how crazy is it? You've got five people, you're operating out of Albuquerque, you just finally expanded from having one customer, and you're like, you know what we should do this year? Let's open in Japan and become an international company. David: Yes. The way this happens is one day, Bill gets a call from a guy named Kazuhiko Nishi, or Kay Nishi, who's a computer enthusiast in Japan, has gotten a hold of Microsoft BASIC, and totally shares the same vision as Bill and Paul. He doesn't have a Paul nor is he technical himself. He's like, I'm going to bring you guys to Japan. I'm going to bring you to all the big computer companies. They agree that Kay will become Microsoft's exclusive distribution partner in Japan. By the next year in 1979, half of Microsoft's revenue is coming from Japan, which is wild. Ben: It's unbelievable, and it stayed at that very high run rate of an international being a huge chunk, close to half always basically forever. This is a huge cornerstone of Microsoft's success that they were an international company from year three of their existence. David: Totally. Revenue in 1977, that last month of revenue was almost $400,000. 1978 revenue is $1.3 million. Ben: They have 13 employees at this point. David: In 1979, revenue is $2.4 million. At the end of that year, they're like, all right, we got to get out of Albuquerque. Ben: They've got 25 employees, I believe, at that point. David: Yeah, something like that. This is when they moved to Seattle. It's interesting to hear Bill talk about this. He actually really liked Albuquerque. Specifically, there weren't any distractions there. Ben: No distractions, weather was great. David: Everybody was happy there, but the big problem was recruiting. He's like, if we're going to build this into the opportunity that I see, the vision that I see and that Paul shares with me, there's no way we're going to do that in Albuquerque. We got to move to a hub. Ben: He's got three reasons for why Seattle in particular. By the way, it worked. Every single person except for his secretary did make the move. (1) He grew up in Seattle. He's like, I just want to go home. He justifies it in two other ways, which I found pretty fascinating. This is from an interview in the early 90s that he did. He said it basically came down to Seattle or Silicon Valley. In Silicon Valley, it's hard to keep secrets because there's a rumor mill. In Seattle, we can be a little bit more removed, and we can announce things when we want to announce them.  (2) In Silicon Valley, people switch around companies. I don't want that. I want people to just work at Microsoft. There was a disadvantage to not being able to recruit from your competitors, but for a while, they were really the only game in town in Seattle. David: But not really, though, because pretty quickly, Microsoft is such an important part of the industry. They recruit from Silicon Valley, too. We're going to talk about some of the people who come up. You're totally right, people stay at Microsoft. They don't leave. This continues right through to this day. The other thing that I think is really important to say that makes it work for Seattle in a way that I don't know that this could have worked in too many other places in the country is the University of Washington. The computer science department there was really good. There were great people. Steve Russell had come out there. There was real talent, and they were churning out graduates out of the U-Dub that would go on to populate Microsoft for decades to come. Ben: Bill, of course, reinvested in that flywheel, donating tons of money to the university. There are buildings, there are whole new schools. David: Yes, absolutely. They played right into it. Ben: Today, it's always a top 10, if not top 5 computer science program in the country. But unlike other top computer science programs, it's a state school, so it just has huge volumes. I think more students come out of the University of Washington and go to big tech than any other program in the country. That has stayed this amazing advantage. David: Yeah. I think the only thing even close to it is Berkeley in the Bay Area with a lot of the same dynamics. But there's Stanford there too, so it's a dual university system in the Bay Area. You cannot overstate how important the University of Washington was to this decision and an ultimate success of coming to Seattle. This brings us to 1980 in the beginning of the year when they move to Seattle, just in time for, I think you can make a very strong argument, the single most important deal ever done in the history of technology. It's crazy to even say it now, the Microsoft-IBM PC partnership. Ben: It's crazy. You have this absolute behemoth partnering with someone that's not really relevant. If you're standing here today, it sounds like I'm talking about Microsoft partnering with IBM. At the time, it was IBM partnering with Microsoft. It was the only computer company that mattered in the entire world, got themselves into a particular situation where they came to Microsoft looking for help. It's the craziest set of events that made this possible, and I can't wait to dive into it. David: Me too. Before we do, this is the perfect time to talk about another one of our favorite enterprise software platforms, ServiceNow, who is one of our big partners here in Season 14. Ben: ServiceNow is the AI platform for your enterprise, helping automate processes, improve service delivery, and increase efficiency. Over 85% of the Fortune 500 runs on them, and they have quickly joined the Microsofts and the NVIDIAs as one of the most important enterprise technology vendors in the world. David: Just like those companies, ServiceNow has AI baked in everywhere in their platform, and they're also a major partner of both Microsoft and NVIDIA. I was at NVIDIA's GTC last week, which, by the way, was insane. I felt like a VIP at a Taylor Swift concert, it was crazy. Jensen brought up ServiceNow and their partnership many times throughout the keynote. Why is ServiceNow so important both to NVIDIA and to Microsoft? AI in the real world is only as good as the bedrock platform infrastructure it runs on. For enterprises around the world, ServiceNow manages that infrastructure.  All the AI applications for enterprises, whether that's supercharging developers with generative AI, empowering and streamlining customer service, allowing HR to deliver better employee experiences, ServiceNow has already done the hard technical work to make rolling them out not just possible, but easy and fast. Ben: Employees can get answers quickly with smarter self-service like changing 401(k) contributions directly through AI powered chat, or developers can build apps faster with AI powered code generation, and service agents can use AI to notify you that someone's product needs replacing before they even chat with you about it. With the ServiceNow platform, your business is 100% ready for AI. Simply turn it on, and it all works.  David: They've built AI directly into their platform, so all the integration work to prepare for it that otherwise would have taken you years is already done. If you want to learn more about the ServiceNow platform and how it can turbocharge the time to deploy AI for your business, go on over to servicenow.com/acquired. When you get in touch, just tell them that Ben and David sent you. The IBM PC. Why is IBM getting into the personal computer here in 1980? A fun quote we heard in our research was that IBM was the sun, the moon, the stars of the computing industry. That meant the hardcore enterprise mainframe computing industry. Ben: David, are you going to attribute that quote or are you going to leave listeners just hanging? David: All right, I think it's time. We talked to probably 10 early Microsoft people in research and preparation. One of those folks was Steve Ballmer himself. He used those words in describing IBM. Ben: And it's hard to imagine a better person to get their perspective on what IBM meant to the world at this point in time, because 1980 was also the year that Steve joined Microsoft. Literally at the same time in 1980, you've got the management team coming together with Steve, Bill, and Paul Allen, and you've got the IBM thing going on, and you've got them moving to Seattle. We haven't even talked about Charles Simonyi yet, but this was the year he joined. David: This is the year. Every year for Microsoft until this point is the year, but 1980 is big. Ben: Okay, so why is IBM the sun, the moon, and the stars of computing? Why are they getting into this PC? It's way cheaper than anything else they sell. It seems to be a totally different business strategy, a different customer set. What's going on? David: All the early microcomputers we were just talking about, the Altair, the Apple II, the TRS-80, are all 8-bit machines. They're running the Intel 8080 processor or a competitor making a similar 8-bit processor. The problem with an 8-bit processor is that the maximum data size for a given instruction cycle in the processor—this is called a data word in computer science terminology—is 256, 2 8 . You can't represent any number greater than 256 in any given CPU clock cycle in an 8-bit machine. Ben: It's effectively a bandwidth limitation, where if you're in a single clock cycle trying to do some particular instruction, it's a very, very small amount of data that you can move through the arithmetic logic unit or that you can move through the processor in that clock cycle. David: Totally. You could think of it as an hourglass or something. There's all the data sitting there in memory at the top of the hourglass, and then there's this small little funnel that it goes through. That's the processor, and then it comes out. Ben: That's a good analogy. It's going to take forever. David: Yeah, into the application of the software that the user sees. You just are not really going to process it that fast. Ben: Very primitive machines. David: Yes. For a company IBM, they eclipsed the 8-bit computing cycle a long, long, long time ago. Mainframes, even minicomputers with DEC, all these machines are at least 16-bit, if not 32-bit computing machines. 8-bit is just not interesting. Ben: Which is why they only cost $375 or whatever for an Altair. David: Right. In late 1979, Intel announces that they're coming out with the 8086 processor, which is a 16-bit microprocessor. With 16 bits, you can really start to do some damage here in terms of the applications that you could put on this thing to eat into business software use cases. Ben: In 16 bits, you can represent numbers up to 65,536, so that's two to the 16th. You can do interesting things passing 16 bits around at once. David: There are some really, really fun aspects to this. If you look at pictures of these processors, what did the 8080, the 8-bit processor look like? And then you look at what the 8086, the 16-bit processor, looked like? You can see this.  In the 8008 processor that's only eight bits, you see only nine pins coming off of the little chip. There's the eight pins for the data bits, and then I think there's one more control pin. If you look at the 8086 processor, it's a much longer rectangle with 16, 17, maybe 20 pins coming off of it. You see this physically represented in the chip. Ben: The further we get in the computing world, the more abstract stuff becomes. It's always fun to go back in history when these concepts were so grounded in our physical reality that's easily observable since everything was so much bigger too. David: Yeah. Back in 1980, the 8086 has been announced, 16-bit microprocessor is coming. IBM has already lived through missing a computing expansion era once with DEC and the minicomputer. They just let DEC take that market. Of course, that didn't really hurt IBM, but man, it would have been nice to also have that market too. Ben: The thing that they're observing about the microcomputer market is it's exploding. People in our industry know about DEC, people in the broader world never knew about DEC. But I think it's a very different rate of adoption and rate of demand with microcomputers where IBM started to look at and go, oh, this might be a really big computer market for people. David: They're finally observing the same thing that Bill and Paul did all the way back in the Traf-O-Date days of this is an exponential cycle. Moore's law, this is exponential, and exponential gets real big very quickly once you get a few years in. Ben: Yup. David: The mini computer cycle never was that. It's hard to remember today, but just to underscore this again, in 1980, IBM was the most valuable company in the entire world, the highest market cap company, bigger than all the oil companies in 1980. Ben: The sun, the moon, and the stars. David: Yes. Do you know what their market capital was? Ben: In 1980, $150 billion? David: You are almost an order of magnitude off $34 billion. That was the most valuable company. It is wild what a different world we live in today. Ben: Yeah, even inflation adjusted, it's interesting that the rate of growth of the most valuable companies in the world in terms of market cap has far outpaced inflation. David: That company, the most valuable in the world, they're going to tiny little Microsoft that's just moved to Seattle for this partnership. What's going on here? This is just so amazing. They deserve so much credit here. They got the Clay Christensen disrupt yourself, disruptive technology thing intuitively decades before Clay writes any of this stuff.  The way that they decide to compete is all the things that Clay wrote about are working against us here. What we need to do is we need to create essentially a skunk works division, just our Lockheed episode. We need to do something outside the company, completely removed from the politics, sure, but the business incentives not to disrupt ourselves, and create a new division they called the entry level systems division. Actually, it may have existed before, but they repurpose it. Ben: This is in Boca Raton? David: In Boca Raton, Florida. Very nice place. We were just there a couple of months ago, but not a technology hotbed in the world. They create a secret project called Project Chess, secret from the rest of the company, the whole world. The goal is to develop the IBM microcomputer or the personal computer, as people are starting to refer to microcomputers. This is wild. They're going to do it in secret with a small team with no other IBM resources. That means this small team, the only way they can do it is to use all off-the-shelf components from technology providers, basically play on the same level playing field as all the other microcomputer manufacturers out there.  One more thing, IBM leadership tells this team in Boca, they have to ship the PC to customers within one year. Ben: It's a crazy constraint. David: It is a total crazy constraint. A couple of quotes on this. Don Estridge, who is one of the leaders of Project Chess, would later say that the company realized that if you're going to compete against people who started in a garage, obviously a reference to Apple here, you have to start in a garage yourself. Lou Gerstner, who later would take over IBM, would describe this whole Boca project as, "The way you get an elephant to tap dance." Ben: The question is, are they playing from behind and thus have to adopt a flawed strategy, or is this strategy of assembling with all off-the-shelf components actually a good strategy if it works? David: Let's tell the story and then come back to it. Ben: Great. David: Okay. What do they do? The hardware aspect of this is trivial, basically. Ed Roberts could put together the hardware to sell a microcomputer and do this deal with Intel. I think IBM can do a deal with Intel, not necessarily trickier but the more important part is the software. Thanks to Bill's genius strategy about be the volume player, don't optimize on per unit price, set the standards out there. Ben: They were the world's leading provider of programming language interpreters, right? David: 100%. There is one game in town and one game in town only, and that is Microsoft in Bellevue, Washington at this point in time. Ben: Now, interpreters are notably different from operating systems, but Microsoft definitely has raised the flag. Everyone could see, if I want to go buy software for my computers, broadly, they're an interesting group to talk to. David: Yeah. Obviously, operating systems are going to become really, really big here in just a sec. Again, the 8-bit generation operating systems weren't that important because people were writing their own software. The standardized software, packaged application software doesn't happen until the 16-bit era and doesn't really, really happen until the 16-bit era and the IBM PC. That's why BASIC the interpreter is so important. What happens? IBM calls up Bill Gates. By August, 1980, the two companies are in serious talks to partner and work together on the IBM PC. We referenced Steve Ballmer a minute ago. The timing is just crazy. Steve had just joined the company in June of 1980. Ben: He's employee number 30. David: The Microsoft team of 30, which the whole company of Microsoft pivots to work on the IBM PC partnership, is bigger than the Project Chess team in Boca. Ben: It's amazing. David: Wow. Okay, Bill has just convinced Steve to drop out of business school at Stanford and come help him and Paul run the company. Microsoft at this point in time is still a partnership. Steve is the first person besides Bill and Paul to get equity in the company when he joins. It's 8.5% and it's a handshake deal at this point. Ben: Bill really, really wanted to bring Steve on. He knew him from the Harvard days, knew what an asset he could be. David: He is the Yin of Bill's Yang. Ben: Yes. Frankly, 8.5%, it's a big grant. Who's out there running a 30-person company, and you're giving away 8.5% slugs? That just doesn't happen. Those are founder shares. This is really a reflection that the way that Bill thought about Steve was as a founder. In fact, it created some tension with Paul Allen, where Bill asked Paul, if they could go to 5%, Paul said, sure. And then Bill actually offered him 8.5%. Paul got upset and Bill said, I'll eat the 3.5%. It can come out of my share because I want him that bad. David: He's the perfect person for this point in time. Bill was the only salesperson doing these OEM deals. Now they're dealing with IBM. They're entering the enterprise world. This needs to be a real business. Back to the IBM negotiations, obviously Microsoft is very interested. IBM is not just very interested in working with Microsoft. They have to work with Microsoft. They're the only game in town. Ben: Specifically, they asked Microsoft for programming languages. They're like, we're making this great PC, we're going to need a BASIC. We think you guys are working on a COBOL. We'd like some COBOL. David: Yeah, Fortran. Give us the whole thing. There's some debate on whether it was the Microsoft side or the IBM side that really saw the vision of, hey, the 16-bit generation is going to enable real business software use cases on the personal computer, but it doesn't matter. That's the plan here, and that is absolutely what happens. These initial discussions are for the programming language. Microsoft doesn't make an operating system at this point, because in the 8-bit generation, the operating system, I think, was a glorified bootloader to just get into the programming environment so that you could either write or load up the BASIC programs that Microsoft was going to interpret and then run. In the 8-bit generation, most, if not all hardware providers of microcomputers just wrote their own operating systems. It just wasn't a big deal. Now, there was one off-the-shelf operating system out there from a company called Digital Research, which was run by Gary Kildall, who, I think as we talked about earlier, Bill and Paul had actually intersected with back in Seattle. Ben: Yup. I think they were reasonably friendly. David: Yeah, I think they were quite friendly because they partnered. You needed the operating system to get into the programming environment. It wasn't that big of a deal. Whenever anybody needed one off-the-shelf, Bill and Microsoft would just refer people over to Digital to get it. Ben: Yup. CP/M, right?  David: Exactly. CP/M, which I think is maybe Control Program for Microprocessors, I think, is the abbreviation there. Ben: God, they were so bad. Every single thing that's been named to this point, except for the company Microsoft, was a horrible name. The processor is 8008, and now it's 8080, but the machine is 8800, that the processor is inside. Give me a break, everyone. It's horrible naming. David: Bill and I'm sure Paul too, but Bill is the only person in this industry that has the vision for what this can become, even Intel. Bill talks about this. He doesn't think that Intel even realizes what's happening here. They're just like, oh, we're just making more chips, and people use them for stuff. Ben: It does seem like very few people are thinking about their products as something they really need to build a brand around with consumers, hence the naming schemes. David: The IBM, Microsoft discussions are going along. IBM's like, oh, hey, yeah, we need an operating system. Bill, I think from everything we've read and folks we've talked to, in good faith just does the standard thing he's always done in these situations. He's like, oh yeah, go talk to Gary, go talk to Digital Research. He can probably do that. Ben: Right. We don't have an operating system, this guy does. David: What happens next is unclear. But what is clear is however it goes down, this is one of, if not the biggest business blunder in history. IBM, that team from Project Chess, flies down, I think, directly from Seattle and talking with Bill and Steve to Monterey, California, where Digital Research is based at this point, to meet with Gary and his wife, Dorothy, who run the business together. Bill's called them. He's like, hey, I got a big OEM client coming down, needs an operating system. Ben: He signed hefty, hefty NDAs. He cannot say who it is, but he's like, you really should take this seriously. David: Right. The team comes down. Obviously, they show up there from IBM. There's a big snafu where Gary does not attend the meeting. There are conflicting reports about what happened. Ben: Was it one of them that he's out flying an airplane? David: Yeah. I'm pretty sure he was flying his personal airplane while this happens. Some reports are he was just out joyriding and missed it. Some reports are no, he was on a business trip, knew it was happening, but he had another important business meeting. He didn't know that this was IBM that was coming. Regardless, it doesn't really matter because IBM just wants the operating system. Dorothy does meet with them. She's unwilling to sign their NDA. There's a lawyer from Digital Research who gets involved, and he doesn't really understand what's going on.  The punchline is that IBM leaves this interaction with the belief that Gary and Digital Research aren't up for working with them and aren't capable of producing here. Producing is important because it's not like the existing CP/M OS that they made would work here. They would have to write a new version, a 16-bit version, and they hadn't done that yet. Ben: In particular, they would have to do some customizing. But part of what IBM wants is a customized version of an operating system for the IBM PC. They don't want this to be fully off-the-shelf. Just to add one more stir the pot of history here, there is another version of this story where Gary does actually have a conversation with IBM, and it blows up over licensing terms. What Gary really wants is a significant royalty of every IBM PC sold, and IBM walks over that. Whether that happened or whether it's just an NDA issue, either way, I think we all know the IBM PC did not end up running the CP/M operating system. David: That's amazing. I didn't know that. We'll talk about that when we get to the business terms of the Microsoft IBM deal in a minute. But for the moment, there's no deal yet because an operating system needs to be provided here.  IBM goes back to Microsoft and they're like, hey, this guy you referred us to ain't going to work. The way that I read some quotes from the IBM people here were like, we just threw the problem back in Microsoft's lap of you guys deal with this, you source an operating system. I'd like to say that Bill, Steve, and Microsoft, you don't need to give them an opportunity twice. In this case, you did need to give them an opportunity twice because they almost flubbed it and sent IBM down to see Gary. This time they don't flub it. They're like, okay, we'll get you an operating system. Ben: Enter Seattle Computer Products. David: Yes. It just so happens that right down the road from Microsoft in the Seattle area—I think despite being named Seattle Computer Products, I think this company was actually based in Tukwila, Washington—a programmer named Tim Patterson had just written a 16-bit operating system for the 8086 that Intel had just announced, and he was calling it the Quick and Dirty 16-bit Operating System or QDOS for short, and had it ready to go. Why had he written this? What was this company, Seattle Computer Products? Why did they have an operating system? They were a component provider to microcomputer manufacturers. They essentially made motherboards. When Intel now has announced this new 16-bit processor generation that they're coming out with, Seattle Computer Products want to sell motherboards and have them ready for 16-bit. They need to test and play around with these things, and their customers are asking for it. They had been going to Kildall and Digital Research too and badgering them to like, hey, write the 16-bit version of CP/M. Gary just didn't, so Tim's like, fine, I'll do a quick and dirty version myself, and thus DOS is born. Ben: Incredible, which of course later, they would drop the Q and call it DOS, the Disk Operating System. Something about dirty didn't have a ring to it when you're selling it to IBM. David: No. Bill, Paul, and Microsoft have learned about this. They know Seattle Computer Products, they know Rod Brock, the guy who owns the company. They get in touch with him and they say, hey, can we license QDOS from you and Tim? We've got a big OEM customer that wants a 16-bit operating system. They work out a deal whereby Microsoft pays Seattle Computer Products $25,000 for the rights to adapt and sell QDOS to the one unnamed original equipment manufacturer who they're working with. Tim, actually, is jazzed about this. He ends up leaving SCP computer products and joining Microsoft. With the rest of the team, he's part of building DOS, taking his initial work and turning it into real DOS. Later on, before this all gets announced and the PC ships, Microsoft would pay Seattle computer products another $50,000 for full rights to own 86 QDOS, sell and license it to anybody else indefinitely. I believe the total amount of dollars that changed hands here is $75,000. Ben: Unbelievable. David: This is DOS. One programmer wrote a "quick and dirty" operating system, and Microsoft bought the license to that and adapted it into DOS. Tim, when he was at Seattle computer products, definitely did not write DOS as DOS. It's not like Microsoft bought all of DOS for $75,000. They did a lot of work on it, but this is how it all goes down. Ben: Microsoft would eventually generate billions of dollars on DOS-based products. You're exactly right in the same way that Instagram today is a much different code base than Instagram and much larger code base than Instagram when it was purchased, but my God, $75,000 to buy DOS to get this whole thing started. Until Windows 95, all of the Windows operating systems were DOS-based. David: It's just crazy. It really illustrates how fast things were moving, how much all this was getting invented and discovered in real time that even to this point, Bill Gates isn't thinking that operating systems are that important. This is just a shortcut to get the deal done with IBM to make it happen. Ben: Also, David, I got to say, I just looked it up. The address of Seattle Computer Products, on the original business card for Seattle Computer Products where I presume QDOS was written, the space is available, so I know where our next studio needs to be. David: It's in Tequila? Ben: It's in Tequila. David: All right. The rent can't be that expensive then, so let's do it. Ben: Correct. David: Hell, yeah. We've been joking for years about making the Acquired Museum. We might have a location.  Okay. Now they've got the operating system, they've got QDOS or DOS in place to license the IBM. The only thing that is left to formalize the partnership is the business terms. Ben, if what you said is right about the Gary Kildall IBM negotiations, this is just a master stroke from Bill here in the licensing with IBM, because there are two really, really big levers that it looks like Bill is giving big time on one of them, but he is winning big time on the other one. Ben: What are they? David: The one that it looks like he's giving on is he does another fixed cost OEM deal with IBM. Ben: This is in Paul Allen's memoir. IBM paid Microsoft $75,000 for testing and consultation, $45,000 for DOS, and $310,000 for an array of 16-bit language interpreters and compilers. All told, bundled together, that is $430,000 fixed that IBM paid Microsoft with no ongoing obligation. David: Yes. No per copy royalties. Every copy of DOS that IBM sells is either included as part of systems that they're selling, or they're free to charge independently for DOS, whatever amount they want, Microsoft gets $0. If it's true that this is where things fell apart with Gary Kildall, crazy that Bill is willing to do this. Ben: You might say, what? Didn't Bill learn his lesson? Why would he ever agree to this? David: On the one hand, this is what he was doing with Apple and others. He was doing these fixed cost deals. He would think, man, IBM, this is the time. People aren't going to pirate IBM software. Now's the time to really grab the money bags. Ben: But Bill saw something that no one else did. David: I don't know if it was directly in exchange in the negotiations, but the other lever that he saw, that he pulled was Microsoft retained the rights to own DOS and to own their languages and license it and them to anyone else they wanted at any price on any terms. Ben: It's so interesting, because what ended up happening that Bill Gates masterminded was once we distribute our operating system through IBM's PC, that's going to become the thing everyone buys. Now, in the 16-bit generation, when there are people building programs for computers, not just developers, once those application developers who are writing programs are targeting an operating system, then that is the operating system that every other OEM, every other computer maker is also going to want and really need, and we're going to be the ones that they have to come to to buy it. I can't figure out, did IBM miss this fact? Or did they know it? Basically, what IBM did was they were the one place where every business needed to go for their computer needs. What they did in this negotiation was they actually handed that over to Microsoft. They said, we are going to become a commodity, just like every other hardware manufacturer, and you are going to be the point of integration for the whole ecosystem. You're going to be the linchpin that everyone has to target for their applications. David: I think there are two things going on here, one small and one big. The small thing is actually related all the way back to the beginning of the episode, what you said, Ben, about the antitrust concerns within IBM. To hear them say it, they actually didn't want ownership of the software. They wanted it to be separate because it would look better. Ben: Because then they have the plausible deniability of, how could we possibly have a monopoly? We're buying off-the-shelf... David: Part of an ecosystem, blah-blah-blah. Yeah. Ben: Yeah. From a vendor who can sell to anybody else. We have no lock in. David: That may well be true. I think the bigger thing that just wasn't in their consideration or mindset was they (I think) assumed that once they entered the PC market, IBM was going to be the dominant player, so it didn't matter. Once IBM is selling PCs, who's going to buy a PC from anybody else? IBM is going to win this market. Ben: Just like they have in every other line of business they've been in. David: What Bill saw was he really made a bet that the same dynamics that played out with the Altair were also going to play out with the IBM PC. There would be a million hardware manufacturers, flowers blooming here. Ben: Building to the same spec. David: Building to the same spec. Ben: Using the same processor. David: Which of course, they could because it was all off-the-shelf components. IBM either didn't see or didn't believe that that would actually happen. Ben: IBM failed to see the value of software, and they certainly failed to understand what a software platform business model would be. David: Which makes sense. Why would they? They are the computing company. Ben: Yes. Their experience in selling mainframes with everything bundled in was the wrong experience to go off of in understanding the way the future would unfold. Bill's very modest experience watching the Altair and all these Altair clone type machines, or even if they're not Altair clones, just more microcomputers that need more software, actually was the useful experience to pattern match off of of what does the world of microcomputers look like, and how is that fundamentally different than the world of mainframes. David: Totally. In a way that the mini computer generation, like we've been saying, it was like a half generation. It wasn't actually fundamentally that different other than DEC gained a foothold. Ben: The deal that Bill Gates made with IBM for the IBM PC is the greatest deal in at least computer industry history, if not all business history, full stop. David: Let's say a little bit about why. It's obvious, but here now is IBM, most valuable company in the world. They're going to come out with the PC platform. They are going to build the market. Microsoft is going to own the linchpin, in Hamilton Helmer terms, where the power is in the market, and they're going to be free to license it at whatever terms they want to any other player who wants to enter. They signed this agreement in November 1980. The IBM PC ships in August 1981. Just incredible, almost exactly a little more than a year from the time Project Chess starts to when they actually ship the PC. Ben: Truly incredible, they pulled it off. David: Truly incredible. It changes the world. That's such a trite thing to say, but everything that everybody's imagining happens. Ben: IBM was right that it was by far in a way the most successful personal computer on the market as soon as they released it. David: Totally. They sell 13,500 IBM PCs within the first couple of months after they announce it. Over the next two years, they sell half a million of them, makes them unquestionably the largest personal microcomputer manufacturer/market leader. Everybody at IBM is celebrating. The clones haven't arrived yet, and maybe they won't. It'll play out like they think. Not exactly. Before we talk about the clones, this is really just a footnote because of course all the incentives are aligned for IBM to push DOS as the operating system for the PC. They've done this whole deal with Microsoft. They have a royalty-free deal with them. When they launch the PC, customers actually have a choice of which operating system they want on their IBM PC. They don't have to go with DOS. Consumers can choose between DOS, 16-bit CP/M. By this point in time, Gary and Digital Research have gotten their act together. They've written a 16-bit version of the CPM operating system. Or another 16-bit operating system called Pascal that came out of the University of California at San Diego. The price sheet for the operating system option is Pascal is an extra $450 with your IBM PC. CP/M is an extra $175 with your IBM PC, and DOS, which was developed specifically for the PC is the best way to run it is only $60. IBM is making $60 of full 100% margin on top of their hardware for the PC by selling DOS because they don't have to pay Microsoft any of that, and they've set up the incentives that obviously everybody's going to choose DOS. Ben: It's fascinating. And you know what? To give them a little bit more credit too, they did try to enforce that there's some amount of lock-in to the IBM PC. They did that in two ways. One is we're simplifying calling it DOS. It was PC-DOS, which is different than MS-DOS, which would get licensed to other computer makers. I don't know exactly what happened, but it basically seems like it just wasn't different enough to be meaningful to application developers. That's one piece of it. The second is IBM did actually have proprietary BIOS. That was another part where they thought that that might provide them some protection, where they could stay a linchpin in the ecosystem. It wasn't just all off-the-shelf. They actually did have something that was theirs that was proprietary. David: It just turned out that the effort required to reverse engineer the IBM BIOS was trivial, basically. Ben: Do you know the story of the Compaq BIOS? David: I know the Compaq story, but I don't know the story of the BIOS specifically. Enlighten us. Ben:  It is basically why Compaq worked is what it comes down to. Compaq was formed basically to clone the IBM PC. They saw the market opportunity, and they realized they could buy from all the same equipment vendors. Let's go eat their margin is basically the plan. However, the one thing that was not off-the-shelf is the BIOS (Basic Input/Output System), which is effectively the thing that decides to load the operating system when you turn the machine on. There's some proprietary magic that happens to call upon the operating system to do its thing. Compaq reverse engineered the BIOS. The way that they did it was very similar to Trip Hawkins and the story that he told us about his reverse engineering at Electronic Arts. David: Of the Psychogenesis. Ben: Yes. Compaq had two engineers. One engineer went in and fully dissected the code for the IBM PC BIOS, basically saw all the proprietary calls that it made, and documented each of those calls without writing the implementation steps. Then he handed, hey, here's what the BIOS needs to interface with, over to the other engineer. The other engineer, on their own, just went through and thought of an implementation. They have no idea if it's the same implementation, so it's not breaking any infringement. They're basically saying, I'm just seeing the requirements for this product, and I'm coming up with my own implementation of that product. They basically figured out how to exactly clone the IBM PC and buy the very same operating system. To go back to quoting Ben Thompson because this is from his great piece again, "The result was a company that came to dominate the market. Compaq was the fastest startup to ever hit $100 million in revenue, then the youngest firm to break into the Fortune 500, then the fastest company to hit $1 billion in revenue, and by 1994, Compaq was the largest PC maker in the world." David: The Compaq story is amazing. The three people who start Compaq in 1982 are actually Texas Instruments engineers who left, and they wanted to start a company. I believe as the legend goes, they were trying to decide what to start. They were considering a restaurant chain and a bunch of different business ideas. The IBM PC comes out at the end of 1981 and they're like, oh, we can clone this and do everything, the story you just told. It's wild. They start the company in 1982. Within the first year, they do $111 million of revenue of selling IBM PC clone hardware. Ben: And is it just cheaper? Basically this is the IBM PC, but for less money? David: Yes, exactly. Same thing, cheaper. Ben: So begins the race to the bottom of PC hardware. Completely undifferentiated, all the value accrues to the software layer. David: Totally. Compaq went public the very next year, in 1983 well before Microsoft, which is funny. Compaq, all these other clone companies that get started. Microsoft licenses DOS to all of them importantly, critically, on a per-machine-sold basis. This is when they grab the money. The operating system is so deeply embedded and needs to get shipped with the computer itself. Consumers can go buy operating systems to upgrade and whatnot, but no hardware manufacturer is going to ship a 16-bit PC without an operating system. Piracy is not an issue here. Microsoft can now do a per-copy-sold, per-machine-sold license with all these clones. My God, it's just a geyser of money. Ben: Microsoft used IBM to generate demand for their software, and then they used every other PC manufacturer to capture the value that all that demand created. David: Yeah. I think I have these numbers and timeframes right. I believe that for calendar year 1982, Microsoft's revenue was $25 million. I think this must have been when they switched to fiscal year end and June 30th. Microsoft's fiscal year end starting then and up through now is June 30th. They're fiscal 1984. The year ended June 30th, 1984, so 1983 midpoint to 1984 midpoint. Microsoft does $98 million. In an 18-month period from the end of 1982, they go from $25–$98 million. It's all on the back of the clones. Unlike Compaq that they did $111 million of revenue their first year, they're selling hardware which has serious cogs associated with it. Microsoft, 100% essentially, gross margin, software revenue, more than doubling year on year. It's the best business of all time. Ben: Yes, and they combined two magical principles together. This infinite replicability, zero marginal costs of software, and becoming the linchpin of the ecosystem. They are now the software that everyone needs to target, which gives them pricing power. That pricing power raises your top line, and you have no costs. It's unbelievable. David: Meanwhile, in the computing industry background, while all this is going on with the launch of the IBM PC and then the clones, Apple had gone public at the end of 1980 in I think, the biggest and most successful IPO of all time at that point. Remember we talked about Genentech on the Novo Nordisk episode. They went public right before Apple, and then Apple was bigger. They're valued at $1.8 billion at IPO. Steve Jobs is this multi hundred millionaire, media darling, all this stuff. The next year in 1981, Microsoft reorganizes from the partnership between Bill and Paul with the handshake deal that Steve's going to be cut in on the partnership into a stock company, a C-corporation. As part of doing that, the venture firm, Technology Venture Investors (TVI) invest $1 million, I believe, for 5% of the company. This is crazy. That's a $20 million post money valuation. Ben: It's a 1-on-20 post when Microsoft is doing how much in revenue? David: That year, they did $17 million in revenue, and they're about to do the IBM deal. This is absolutely absurd. Ben: It says a lot about this period of time that you could do a 1X revenue deal in a high-margin software company. I actually don't think this shows a weakness in Microsoft. Oh, they didn't have leverage or something that. That wasn't it at all, it was just the deals sucked. David: Venture capital sucked back then. There's no other way to put it. Ben: It's only 5%, so good on Microsoft. Spoiler alert, this is the only dilution that they would ever take. That's also extremely different than today, but a $20 million valuation at this stage is frankly ludicrous. David: Even among people who should be in the know, the beauty of the software business model still is something people don't understand. Ben: That's exactly right. David: The hotness is the hardware. It's like Apple just IPO'd. Apple's worth $1.8 billion. Like, ooh, that's the industry, ooh, it's IBM, et cetera. When Microsoft itself would go public a few years later in 1986, they actually go public the same week that they moved to the big campus in Redmond, where they are to this day. Their market cap at IPO is only $750 million despite having done $200 million of very high margin software revenue in the trailing 12 months up to that, growing 100% year over year. It's insane. Ben: Hey, that's 4X multiple expansion off the last time they raised money. David: Right? It's just crazy that people don't yet appreciate the power. Ben: Bill Gates and Warren Buffett did a conversation at the University of Washington in 1998. This is as late as 1998. This thing that we're talking about, the magic of the software business model and how it should be reflected in a company's valuation especially when it's a high-growth company was still not understood even by Bill Gates himself. Here's the quote. Bill Gates says, "I think the multiples of technology stocks should be quite a bit lower than the multiples of stocks like Coke and Gillette because we are subject to complete changes in the rules. I know very well that in the next 10 years, if Microsoft is still a leader, we will have had to weather at least three crises." Bill Gates is essentially making an argument. Granted, this is in the middle of all the antitrust stuff, so he's very prime for this. David: And the Internet. Ben: And the Internet. He's basically making the argument that disruptive forces come at you so fast in the technology industry that even though you can grow extremely fast, it's this extremely scalable thing, distributing software at zero distribution costs, and even though the margins are unbelievable because you have zero marginal costs, they still shouldn't be valued as highly as a CPG company, which is so different than the way that people think about it today. David: It's funny. I've thought about this a lot, and I actually watched that interview years ago. It's so good. There are elements of truth to this too. I think it's that for most technology companies, that is totally true. For a few technology companies that have true power and true scale, the exact opposite is true. Microsoft is still the most valuable company in the world today. Ben: Companies that are less susceptible to disruption, more predictable in terms of high growth, high margin revenue deserve a premium. But Gates is basically arguing, everyone else doesn't.  Let's flash all the way back to 1981 and talk about this venture capital investment, this 1-on-20 that TVI does. David: Good work if you can get a man. Ben: How does this come to be? Even a whole year before in the fall of 1980, Dave Marquardt, one of the partners and the founders at TVI, flies up to Seattle not to meet Bill Gates, but to meet Steve Ballmer. David: Because they were classmates at GSB, right? Ben: They weren't quite classmates, but because I think they were two years apart, so they didn't overlap, but they had some of the same social circles. Steve was effectively the screener for anyone who wanted to come and talk to Bill and try and invest in the business.  TA Associates had been up, Sutter Hill had been up, Hambrick and Quist had been up, Xerox Ventures, and all of them only ever got to meet with Steve Ballmer and never got passed on to Bill Gates. Steve would basically just bounce them off. I know all this because there's a great oral history from the Computer History Museum, where this whole thing's in a transcript with an interview with Dave Marquardt recalling the whole thing. Dave flies up to meet with Steve. Steve says, you're asking really interesting questions. You're thinking about our strategy the right way. You don't just want to do a transactional deal. You really think this is something special. Why don't you meet with Bill? Bill, of course, doesn't have any extra time in his schedule. He says, but I am going to the U-Dub Arizona football game at Husky stadium. Why don't you come and talk to me there? Of course they go, Bill doesn't pay attention to the game at all. He's just laying out the strategy, grilling Dave, and talking about software the whole time. This is fall of 1980. That's a whole year before the deal gets done. Dave's remarking at this point in 1980, they're doing $5 million in revenue, $2–$3 million in profit. They don't need VC money, and yet he was able to get in. Here's the quote. "I was just helping them out with the business. In the venture business, you're buying and you're selling at the same time. You're trying to figure out, are these guys crazy? Are they ever going to do anything really interesting? If so, how do I get myself positioned to be able to help them do it? So I spent a lot of time up there helping recruit people. I helped to recruit Charles Simonyi, who was an early key guy." Charles Simonyi would go on, this is an aside, to write Microsoft Word. Charles was at Xerox PARC inventing the GUI. David: We're going to talk about Charles in just a sec. Ben: Yes. He says, “And I was working with Steve on business strategy. They had these OEM customers, the PC manufacturers, and they had started to engage with IBM on this operating system. Are we just going to become a low-cost contract programming shop for IBM, an outsourced sweatshop? Or is there some way we can build a business out of this?  Which led to the fixed fee to IBM, the retention of the code, which then we could sell to other people. That's what created the PC industry basically.” That is his recollection of the whole thing, that he was very helpful in this transformative time for the company. At the same time, you have to look at everyone else's incentives. David: How can I be helpful, Ben?  Ben: Dave is only 29 years old, but everyone else is 23. He actually is adult supervision. At the same time, the partnership was still just a partnership, and there was a handshake deal for the equity. If you're Steve Ballmer at this point in history, it would be nice to have a forcing function to actually turn this into a corporation so that we can get some shares granted here. There's a little bit of incentive to say, hey, if we take on an outside investor, we're going to have to restructure. David: That's what I had always read about the TVI investment. Obviously, Microsoft didn't need the money. They like Dave, but also a big part of it was this was a catalyzing function to do the conversion into a C-corp. Ben: Yes. This would create a little bit of board and governance, so it's not just Bill all the time. Bill, of course, I think is still the controlling shareholder just by the amount of stock that he owns. But there's a board. It's Bill, it's Dave, and it's Kay Nishi. It's a three-person board. David: Yeah, we should say-to-vis a vis Paul, tragically, and I believe it was 1982-1983, he's diagnosed with Hodgkin's disease. He ends up taking a leave and then fully leaving the company. I think he did go on and off the board at various points in time. Ben: That's true. David: But he's no longer a full-time member of the company after his diagnosis. Ben: Yup. On this venture investment, it's pretty fascinating. None of these are terribly compelling reasons other than, I guess, it would be nice to have a little bit of capital associated with us formalizing the corporation, but they don't need money at all. They're printing cash. They've been printing cash ever since that one tight period in Albuquerque. Dave charmed them. I think that's the answer. David: I've always heard wonderful, wonderful things about Dave, and I think everybody really did love him and see his value. But man, to be a venture capitalist in the 1980s and 1990s, oh, man, you couldn't lose. Ben: It's pretty crazy. I think part of it too had to do with the fact that Microsoft was up in Seattle. The VCs just weren't traveling. Dave was young and he was single. David: Don Valentine famously had the rule. They didn't invest in any company that you couldn't bicycle to from Sand Hill Road. Ben: It's crazy. Dave Marquardt, I think most weekends, is flying up to Seattle to hang out with Bill and Steve. It was a real sell. He says, I was young, I was single, I had nothing better to do, and it was really fun and intellectually interesting, so I did it. That resulted in, depending how long TVI held, one of, if not the best venture capital return in history. David: Hard to argue with that one. Okay, back to the story. There are a couple more really, really key things that happened in the PC era. Particularly now, once we're into the IBM PC era and the clones, the 16-bit era. Let's start with applications. Like we've been saying all along, the 8-bit era, applications, package software aren't really a thing. In 1979, at the tail end of the 8-bit era, two programs come out for the Apple II, VisiCalc and WordStar. VisiCalc is the first software spreadsheet application, and WordStar is a word processor. These applications by today's standards are super simple, stone age–type stuff, but they're the first of their kind, particularly VisiCalc and the spreadsheet. They established the potential for business applications on personal computers. There's a joke at one point in the industry that the Apple II was a "VisiCalc" accessory for small businesses. I think that is part of what IBM is seeing and why they're deciding to now get into the industry with the personal computer. Around this time, Microsoft starts the "Consumer Products Division" to compete and make application software themselves. Ben: It's quite telling it's called the Consumer Products Division to make applications. Even though they're competing to make these applications that today we would view as business tools, spreadsheets, and word processing, that is not how they referred to it. David: Right. One of the first people that they hire into this new division to get it going is an engineer, Ben, who you referenced just a minute ago, named Charles Simonyi. They poach Charles, perhaps with Dave Marquardt's help, away from the legendary Xerox Palo Alto Research Center (Xerox PARC). I think this is one of the great misconceptions in technology history. Hopefully we can set the record straight a little bit here. Ben: Yes. If you ask anybody in our ecosystem, save for the 1% of people who actually know this, what happened at Xerox PARC? They will tell you they invented the mouse, they invented the graphical user interface, and then Steve Jobs walked in, he saw it all, and he said, oh, my God, we have to have it. He went off and he made the Lisa, which had a graphical user interface and a mouse. That failed, but what succeeded was the Macintosh, and it's a wholesale ripoff of Xerox PARC that lives on today in Apple. That is the story that you will hear from basically everyone. David: I've heard it characterized as something like Xerox hosted a picnic in Silicon Valley, and Steve Jobs attended and dined lavishly at the feast. Ben: All of this is true. David: Which is true. That is true. All of that is true. Ben: But it's half the story. David: He was not the only person who dined lavishly at the feast. Microsoft did just as much directly from Xerox, and Charles was one of the main vectors by which this happened.  Here is the list of things that were invented or basically invented at Xerox PARC. The graphical user interface, the desktop, the mouse, object-oriented programming, ethernet, laser printing, along with a whole host of other things. This is everything about modern computing, invented there. Who are the people who were at Xerox PARC? There was Alan Kay, there was Bob Metcalfe, who would go on to found 3Com. He invented ethernet, Metcalfe's Law. Ben: Yeah, the value of a network scaling proportionally to the square of the number of inputs. David: Yeah. Bob Metcalf, Xerox PARC, Larry Tesler, who would join Apple, John Warnock, who started Adobe, Eric Schmidt worked at Xerox PARC. Everybody was there. It was a lavish picnic. Ben: And Charles Simonyi. David: And Charles Simonyi. The thing about PARC and the computer that they built there to instantiate all these concepts, which was named the Alto, is it really was a research center. The Alto, go look it up on Wikipedia, go look at pictures. It's the Mac. The Alto is the Mac. Ben: It's the Mac with the monitor turned on its side. David: Yes, it's a vertical Mac. Ben: It's a 3x4 display, not a 4x3 display. David: They start making it in 1973. You might be like, wait a minute, what's going on here? The Mac doesn't come out till 1984. Ben: 11 years earlier.  David: How on earth is Xerox making the Mac in the pre 8-bit era, the pre-microprocessor era? It's not a microprocessor. The Alto is not a microprocessor architecture. It's a mini computer. What you see when you look at photos of the Alto is you see the Mac. What you don't see is under the table or behind it is a mini computer. Ben: I never realized that. David: It is not a personal computer architecture at all. It is a 16-bit, essentially mini computer, that costs tens of thousands of dollars to make each one of them. It's a science project. Ben: You should have a little bit more generosity for the East Coast management at Xerox for failing to commercialize this. David: Totally. The time was not right. It was not possible. It wasn't even conceived of in the microprocessor architecture, because the microprocessor basically didn't exist when they made it. Ben: Interesting. David: In 1980, again, this year for Microsoft, same year Microsoft joins, same year they signed the IBM partnership, Charles Simonyi comes up from Xerox PARC. He's of course bringing all this same knowledge, all this same experience that Steve jobs is bringing into Apple. He's bringing all that right into Microsoft too. The first thing that he gets tasked with is working with this new consumer products division to build application software to compete with VisiCalc and WordStar to compete with spreadsheets and to compete in word processing. He leads the teams that create Word and MultiPlan, Microsoft's first spreadsheet. Remember, we're still at the end of the 8-bit era. The graphical user interface doesn't exist yet other than on the Alto in Xerox PARC. Ben: No, these are DOS applications. It's all character mode. David: Yes, it is command line interface. The vector that they think they're going to compete, at least in spreadsheets with VisiCalc, is that they're going to be on every platform out there. VisiCalc, I believe, was more or less basically only on the Apple II. That doesn't end up working too well. The next generation, the IBM PC era, they make the same mistake. The application business stays focused on being on lots of machines, making software that's compatible with everything. A new company pops up called Lotus. Lotus makes the radical decision that they are going to make a spreadsheet only for the IBM PC. This was genius. This is the 1-2-3 spreadsheet. It goes on to become, at that point in time, the most successful software ever. This is wild. I can't even believe I'm about to say this, and it blew my mind when I found it in research. There are a couple of years in the late eighties, where Lotus has more revenue than Microsoft and is valued higher. Ben: Yup. In fact, the year that Microsoft went public, Lotus had more revenue than Microsoft at the IPO. David: Yes. Wild. Ben: it's crazy. Lotus 1-2-3 had some graphics, but it was still in character mode. It was a powerful spreadsheet that could start to do some graphics, even though there wasn't actually a GUI operating system yet, which is interesting. Lotus 1-2-3 was faster, it had bigger spreadsheets, and it was just more powerful. Microsoft Multiplan was still targeting the older 8-bit. Multiplan, despite Microsoft's best efforts, is completely left in the dust. Microsoft's trying to figure out, what should we learn from this? In talking with Pete Higgins and Mike Slade, who were both early leaders in the development and the marketing of the applications division, actually, Mike Slade went on to work directly for Steve Jobs at NeXT and Apple for many years. In chatting with both of them, what basically became apparent Microsoft learned, with our applications, we should not be targeting the current platforms at all. The lesson to learn is never leave yourself open to the next generation of technology. They're learning the Moore's Law lesson again. David: Yes, and how it applies to applications. Yes. You always got to target the next platform. Ben: Right, even if that platform is not the one you own. That's the interesting thing about when they're evaluating Multiplan and they say, how do we not get Lotus 1-2-3 again, basically, the applications team gets the freedom to look around and say, okay, no matter what our overall company strategy is right now, or no matter what the systems division is doing, what is the most cutting-edge platform that is going to be so interesting to people that we can develop the most envelope-pushing technology for it? That becomes the mandate for applications. David: This is the dawn of horizontal software. You can have a whole company or a whole division of a company, in Microsoft's case, that makes this tool. That tool will be so much better than anything that even the largest companies can have their own software developers write. General Electric isn't going to write a better spreadsheet than 1-2-3. I think that the technology complement to this law is the killer app. Ben: You have to counter position. If 1-2-3 is the best spreadsheet out there for the current technology generation, you just can't compete with them. You need to wait for the next big leap forward in order to find a new competitive vector. David: You need to be the killer app on the next platform, and that's what Lotus 1-2-3 did with the spreadsheet on the IBM PC and IBM compatible PC. That's what Microsoft decides, hey, we got to do this in the graphical interface. Ben: Who's about to come out with the very best instantiation of a graphical user interface? Apple computer. David: That would be Steve Jobs. Ben: Yes. The next chapter of our Microsoft story is the Macintosh in 1984. David: It's so fun. Ben: Before we do that, this is the perfect time to talk about another one of our favorite companies and longtime Acquired partners who are back, pilot.com. For startups and growth companies of all kinds, Pilot handles all of your company's accounting, tax, and bookkeeping needs, and is in fact now by far the largest startup focused accounting firm in the entire US. David: Also, we have to give our good buddy and Pilot CEO, Waseem Daher, a special shout out here because I think he is now the only Acquired sponsor CEO, who is also a source for an episode, because back when Waseem was a student at MIT, he interviewed Bill Gates for the school paper. He dug up the PDF and sent it to us. We're going to link to it in the episode sources. Ben: Yes. Very fun. Back to Pilot, and speaking of incredibly successful Seattle business people, we talk all the time on Acquired about Jeff Bezos' AWS-inspired axiom that startups should focus on what makes their beer taste better, i.e. only spend your limited time and resources on what is actually going to move the needle for you, your product, your customers, and outsource everything else that you need to do as a company but doesn't fit that bill. Accounting is example number one of what he's talking about. Every company needs this, but it needs to be done by a professional. You don't want to take any risk of something going wrong. But at the same time, it actually has zero impact on your product or your customers. David: So enter Pilot. Pilot both sets up and operates your company's entire financial stack, finance, accounting, tax, even CFO services like investor reporting from your general ledger, all the way up to budgeting and financial sections of your board decks. They've been doing this now for years across thousands of startups in Silicon Valley and elsewhere. There's nobody better who you can trust to both get finance right and make it easy and painless for your company. Ben: These are now companies like OpenAI, Airtable, Scale, as well as large ecommerce companies. It's not just that they have the experience across startups, they can also keep working with you as you scale to the growth phase and beyond. If your company wants to go back to focusing on what makes your beer taste better, go on over to pilot.com/acquired and tell them that Ben and David sent you.  All right, David, why are we talking about the Mac? David: Because I think it's fair to say that the Mac made Microsoft Office, and Microsoft Office made the Mac. I don't think that it's actually a controversial statement, although it probably sounds crazy to many of you listening. Ben: Totally. Far and away the first thing to point out is the first version of Microsoft Excel was for the Mac. It's especially crazy for all the finance people today who are like, oh, Mac Excel isn't real Excel. Excel has to happen on Windows. David: No, Excel was on the Mac. That was it. Ben: Yes. The logic basically was Microsoft was really coming around to the idea that the next big thing in computing was the graphical user interface. The reason they were coming around to this was because they knew from Xerox PARC just as well as Apple did, and they were rapidly trying to figure out how to get All of that Xerox PARC-iness into their product line, too. That's the other half of this untold Xerox PARC story. One of the first ways that they see to bring the graphical user interface to their products is launching Excel for the Mac because they basically see, the way that we got destroyed with Lotus 1-2-3, we can't compete with lotus on the IBM PC, so we're going to shelf Multiplan start over, and Excel is going to come out in the graphical user interface. We're going to try to be first and best on the GUI. David: One thing just to underscore here, Excel is the world's first graphical spreadsheet program. That's why it wins, and that's why it's so important. Imagine trying to use Excel in the command line interface. That's what VisiCalc was, that's what even 1-2-3 was. Yeah, useful, better than nothing, but graphical charts, cells, visual relationships, this is so important. Excel is where it all starts. Ben: Yup. Of course, Apple loves this. The Macintosh came out in 1984, and everybody remembers the great intro video and the hello script. I've watched that Steve Jobs keynote because of course, I have, and it's this magical moment in computing history where finally something that's insanely great comes out. It's the beginning of Steve Jobs' unbelievable presentation prowess. It's so fun to watch it. It's, of course, a product that eventually people really loved. But at first... David: It doesn't have the killer app. Ben: No, it's a product that was supposed to ship in 1982. It didn't, it shipped in 1984. At the time, what they were targeting for 1982 was a pretty great set of technologies. By 1984, it's an aging set of technologies. It debuts with 128K of memory, which basically isn't enough to create any interesting applications. Developers are ignoring it as an interesting platform to develop on. Within 12 months, they figure it out and come out with a better version that's 512K. That's the version that people now really think about. David: That gets re-christened as like, that's the original Mac. The original original is the Mac 128 or something that. Ben: Exactly. But in the meantime, Microsoft, the applications group is working their ass off to make something really great for the Macintosh, and they come up with Excel. What ends up happening is Apple's really trying to promote the sales of this machine. They view Excel and PageMaker as the killer apps, as reasons that people should buy this thing, because once you run through a lot of the demo apps and the stuff that Apple built, you're like, okay, what else is here? It's crickets. David: Right. Writing hello in script is cool, but like a lot of VR stuff, you're like, oh, that's a cool demo, but you're going to do that every day? No. Ben: I'm not sure this has ever been publicly disclosed before, but Apple spent just as much marketing Excel as Microsoft did. They matched Microsoft's marketing spend with their own campaign for it and split the bill. David: That's amazing. Ben: You've got a couple of concurrent things going on in applications land. You've got Excel coming out for Mac to take advantage of the GUI. This strategy is just all over the place, I think that's an interesting thing to underscore about Microsoft in this era. They're trying a ton of stuff because they're paranoid. They don't want to miss the next wave. Meanwhile, also in the applications group, Charles Simonyi has written Word. This is about a year before in 1983. Microsoft Word comes out for DOS. David: Right, and they ship it with a mouse. Ben: Yes. This is like, okay, we see the Xerox PARC stuff coming out in the Mac. Great, Excel will be for that. We want to develop Word. We're going to do that for DOS. But I can imagine how useful the mouse is going to be in a word processing environment. They actually ship a mouse tied to the application that's not a part of DOS. This is how early we were in figuring out what the split between applications and platforms were at this point in history. Microsoft thought maybe a mouse makes sense just for this one application, even though it doesn't do anything else for the rest of the command line interface. David: It was all being figured out. I think it is also really fair to say that Microsoft was right there with Apple in the Mac development phase. Obviously, they're working on Excel, working on other what would become the Office Suite applications together for Mac.  Steve Jobs shows Bill Gates the Mac project in 1981, three years before it ships. Microsoft and Apple signed an agreement to work together on applications for it in 1982. They were very deeply embedded on this, which is going to make the lawsuit and what comes up in a minute here all the more funny. Ben: The decision for the Excel team is to focus on GUI. The whole marketing message is Excel on a Mac is better than Lotus 1-2-3 on a PC. You're starting to see truly divergent cultures at Microsoft between the systems group, which is currently making DOS.  We'll soon make Windows, soon partner with IBM, or soon do something else that we're getting into here in the next chapter of the story, and the applications group, which is also currently a bunch of disparate applications and teams targeting disparate platforms, but is also about to become unified in their next chapter. Within the applications group, that next chapter is Microsoft Office.  In 1985, in January, the bundle is released. It was originally called the Business Pack for Microsoft. It started on the Mac. David: It really rolls off the tongue. Ben: Totally does. They haven't acquired PowerPoint yet or forethought as we talked about eight years ago on Acquired way back in history. There's no PowerPoint, it's not part of the bundle. What you've got here on the Mac and the first version of Office is Word, which they've developed in house, File, Chart, and Multiplan. This first notion of a suite, so today we're very familiar with suite—Creative Suite over at Adobe. Software is sold this way. This was the first time. What was actually happening is all of the bundling was happening in pricing, in marketing, and in manufacturing. You had a single box that they would ship with the different applications by 1988 or 1989. It was Word, Excel, PowerPoint. They're very different things, but they're getting bundled together in a way to be sold to customers, but there's no product integration. You don't have the ability to do this very nice copy-paste from an Excel table and just paste that into Word. That whole idea is pretty far away. In this earliest Microsoft Office, it was just, how can we bundle something for a cheaper price if you buy all three and make marketing easier for us to have this unified message? David: Soon to come—and we'll get into Windows here in a second—one of the big killer app for productivity in particular for business productivity with a graphical user interface like Windows and true multitasking, you can get copy-paste from Excel into PowerPoint. Lotus and the world back in the command line interface where you've got these programs running on top of DOS, that is a completely foreign concept. Ben: Right, none of those verbs exist. David: Exactly. We've now set the stage of Microsoft's doing a lot of stuff. They're hedging a lot of bets, they're not totally sure which strategy is going to win out, they're not sure which platform is going to win out. They're not sure if they're more of a systems company or an application company, but what they are unified on is we make great software for personal computers. I think anything that fell into that purview, they were willing to explore. They didn't really have hard boundaries between, we'll do anything to make our operating systems great, or we'll do anything to advantage our applications. Even we think we're an enterprise company, we think we're a consumer company. They just didn't have well formed opinions yet. It was just we make software for personal computers. David: At this point in time, the actual boundary between an operating system and an application is very fluid. Ben: You've got a mouse that works for one program. David: Totally. Lotus would really go down a dead end evolutionary path with Notes later in its life and its final chapter, where the application was going to be the operating system. Ben: Right. Lotus Notes was crazy. It was a word processor, an email service, and it was a platform on which you could write other applications. David: Yes, and it itself was an application. Ben: It's crazy. David: Not an operating system. It was all dynamic. Speaking of though, Microsoft here is in bed with Apple, working on the Mac. Bill and the company are big believers in the future of the graphical user interface. Starting in 1983, they're like, we got to do our own graphical operating system or at least user interface. This is the origins of the Windows product. They actually announced it in November, 1983, before the Mac ends up shipping, which their partner, Apple, is of course not happy about. Just development of the Mac was rocky, development of Windows was super freaking rocky within Microsoft, too. This is around that same time when Paul Allen gets Hodgkin's disease and leaves the company. His presence as great technical leader is very much missed, but they bring in someone from Xerox to manage the development of Windows. That person ends up not working out, he gets fired. Steve Ballmer gets drafted to come in and be the dev manager for the final push to release Windows 1.0, which is hilarious. You can find amazing YouTube videos from the launch and all joking about how non technical Steve coming in to Save the day and dev manage windows to launch. Ben: Which is so funny. I don't think at this point in history, the lines were clearly formed among the executives yet. Steve wasn't running the global sales force, and Microsoft wasn't an enterprise company. David: No, we're going to get to that later. Ben: Steve was one of the smart executives, they were a software company, and someone had to manage getting the software out the door. Windows 1.0 comes out. It's bad. David: It's bad. November 1985, Windows 1.0 is a very, very different thing than you imagine a graphical user interface is today or what you know of as Windows. It was tiled. It was not overlapping Windows that you can drag around and have one over the other. When you opened a program in Windows 1.0, the system created a literal window of it on your screen, and then it dynamically resized the windows as you open other applications. Nothing could ever be on top of each other. As you open more and more stuff, the windows get smaller and smaller and smaller. It's very bizarre. Ben: Yeah. The idea of windows overlapping on top of each other, that was a uniquely Mac thing and a thing that smart engineers at Apple figured out how to do that in a performant way that offers good user experience. I would classify Windows 1.0 as a half step between command line and an actual graphical user interface. David: Yes, 100%. I believe Microsoft and Apple actually did a licensing agreement while they were working together during this time that said, hey, Microsoft can use a lot of the stuff that's being developed for Mac for Windows 1.0. Ben: Yes, that's right. Apple does do a deal to license a lot of "their intellectual property" which of course came from Xerox, to Microsoft. Apple, I think, was under the impression that it was just for Windows 1.0, but the actual terms of the agreement are this and all future versions of Windows, which comes back to haunt Apple later. But yes, they totally get the license. David: Also, by the time that this agreement actually happens, I think Steve Jobs has been ousted, so it's Scully who does this agreement. People in Apple would look back on this for years and be like, this was a huge error.  The other important thing about Windows during this awkward teenage phase is it's not an operating system. It's just a graphical interface on top of DOS. Ben: Yes. David: The original name for Windows was Interface Manager. Ben: Isn't it crazy? In all of their early marketing, they referred to it as Windows, a graphical operating environment that runs on the Microsoft MS-DOS operating system. Actually, it was not until Windows 95 that Windows was its own operating system. It was in Windows 1.0, 2.0, 3.0, 3.1, and Windows for Workgroups. It was a graphical operating environment. Here's the question. Why is Microsoft doing Windows? Obviously here, Microsoft knows they need to evolve DOS. They need to figure something out for the graphical world. David, are you telling me that Windows is the widely agreed upon future of the company and that's just a straight line? David: Obviously that's a setup there. Here's the other thing that's happening in the company at this time, and it's the bigger thing. It's the next phase of the IBM relationship. Windows, the Mac, all of this, are hedges for the company. Microsoft and Bill, in particular, were masters of hedging their bets in an uncertain technology future. He was so great. The company was so great at making sure that whichever way the apple fell from the tree, as Jetson Huang put it to us in our interview, Microsoft was going to be positioned to catch it. A lot of people, including Bill and Microsoft themselves, believe that the way that apple was going to fall from the tree here was IBM and OS/2. Ben: The IBM PC was such a big deal last time around. You would think that whatever IBM wants to do next is a pretty good way to ally yourself. David: What's going on here? IBM, obviously the PC was a huge success, but losing dominance of the ecosystem to the clones, this was bad. IBM wants to find a way to evolve the PC ecosystem back to being more IBM proprietary. They're going to make Microsoft come along for the ride here. The way that they're going to do this is with the next generation of the PC ecosystem, they are going to make a whole new modern operating system. They're going to get rid of DOS. They're going to make this operating system in partnership with Microsoft, and it's going to be called, fittingly, OS/2. They are going to lock Microsoft up that they can't license it to anybody else. OS/2 is going to be proprietary to IBM hardware, just like the Mac operating system is proprietary to Apple hardware. As powerful as Microsoft's become here, they're still the little brother to IBM. This is not great news for Microsoft. On the other hand, it's much better for them to be on the inside here with IBM working in bed with them than it would be to be on the outside looking in if IBM's vision comes true and they recapture control of the PC ecosystem.  Bill, Microsoft, the company, and Steve too as the manager of the account with IBM, commit themselves to Microsoft is all in on this vision of the future of OS/2, and IBM is our horse in the race. Ben: This is such a crazy part of the story to me, because we just talked about how Microsoft discovered this amazing business model. With everyone needing to license DOS from them, they're taking over the world, and they're becoming the standard development platform. Why on earth, if all that is true, are they going to develop some software that's going to be locked to IBM computers? David: This is a recentralization attempt. Ballmer has this great, great, great quote about it. He says, "This,” the IBM partnership at this time, “was what we used to call riding the bear. You just had to try to stay on the bear's back and the bear would twist, turn, and try to throw you off. But we were going to stay on the bear because the bear was the biggest, the most important. You just had to be with the bear. Otherwise, you would be under the bear." That was IBM at this point in time. Really, I think it was IBM essentially putting a gun to Microsoft's head and being like, well, you can be in bed with us on this future that we're going to re-centralize everything, or you can be everybody else and not be, and you'll lose. Ben: Even though Microsoft's doing all these little hedges, Windows, this tiny little team that's 30 people or something, it's not the most prestigious place at the company. The people in the applications division may as well be on another planet by this point from the systems division. They're trying all kinds of crazy stuff. The company motto at this point is the next big thing is OS/2 and IBM, and we are the software vendor for that. David: Certainly Bill and I think Steve, too, they needed to tow the party line politically of expressing that, nope, OS/2 is the future. What we're doing with Windows and with the Mac is those are small things within the company. It's a super bizarre period in history, but IBM had also made a bit of a power play too with the later generations of the 16-bit era product they called the PC/AT. They used the Intel 286 chip instead of the Intel 386 chip. The 286 chip—this was an intentional decision on IBM's part—was good, but it wasn't great. Ben: You say it was good, but not great. Bill Gates said it was brain dead. David: Yes. Bill Gates called it a brain-dead chip. Ben: I think you might be being charitable. David: I think it certainly was more powerful than the 8086, 8088, but it was nowhere near what the 386 could do. There's a bunch of technical aspects to this, but the most important takeaway is that the 286 was not really powerful enough to do a graphical user interface or to power true multitasking in a way that the 386 and then later the 486 would be. A big part of actually the Compaq story about how Compaq and the clones leap ahead of IBM is they're not deterred from coming out with 386 machines, which are way more powerful, can run Windows, can do all this stuff. That's how they start to separate from IBM. Ben: That's right. That was a bet that company move where Microsoft was like, hey, Compaq, go make 386 stuff because we're going to make a really great 386 software. We need someone to be all in on that because IBM's not. David: This is the thing. Bill, Steve, and the company, they're having to tow the party line of expressing commitment to IBM, but really they're like, no, Compaq, go do the 386, we're going to do Windows. Ben: Right, they're riling up the rebels. David: Exactly. They are the rebels versus the empire here. Anyway, IBM, of course, sees all this. They made the decision not to go to 386 and to discourage it in the marketplace because they didn't want PCs to start creeping into the core enterprise mainframe IBM workloads, their core business. If that was going to happen, they wanted it to be IBM proprietary closed system. I think that was a big part of the impetus for this OS/2 initiative. Ben: I see. David: This is the empire strikes back here. Ben: They're basically trying to coop the PC movement back into IBM proprietary land. David: Exactly. When OS/2 finally does come out in December 1987, predictably, as you can imagine here, it's not very good. The market does not like it. Thank God for Microsoft. Again, this probably was Bill's strategy all along that they hedged with Windows, with the Mac. That's clearly the future. The market is not going to accept OS/2 and a recentralization on IBM. Microsoft's just crushing it on the revenue side, even though OS/2 is a failure. Ben: DOS and the applications were both great businesses by 1987. David: Yes. Fiscal 1987, Microsoft does $350 million in revenue. Fiscal 1988, they do $600 million in revenue. Basically, none of this is from OS/2 and the IBM world. Towards the end of 1988 is when the wind starts really blowing away from IBM here. In June of 1988, Microsoft hires Mike Maples, who is IBM's director of software strategy away from IBM to come head Microsoft's application software. What is Microsoft's application software strategy right now? It's the graphical user interface. It's everything that IBM isn't. The writing is starting to be on the wall here that divorce is coming between IBM and Microsoft. Finally, a year-and-a-half later in 1990, Windows 3.0 comes out. This is when they get it right. This is when there's enough installed base of 386 and 486 machines out there in the open PC ecosystem that you can have a really good, true multitasking, good UI, graphical user interface running on top of DOS. Windows 1.0 and Windows 2.0 only ever achieved 5% penetration of the DOS installed base. Windows 3.0 doubles that in the first six months. PC Computing magazine writes about Windows 3.0. May 22nd, 1990 will mark the first day of the second era of IBM compatible PCs. Microsoft released Windows 3.0. On that day, the IBM compatible PC, a machine hobbled by an outmoded character-based operating system and 70s style programs, was transformed into a computer that could soar in a decade of multitasking graphical operating environments, aka everything OS/2 is not. Windows 3.0 gets right what its predecessors got wrong. It drives adequate performance, it accommodates existing DOS applications, and it makes you believe that it belongs on a PC. Ben: That's awesome. David: That's what the press thought. Ben, I know you talked to a really important person in the Windows ecosystem and Microsoft internally at this time. What do you have for us? Ben: We have to thank Brad Silverberg for helping us with this section. Brad led the Windows 3.1 team. He came in right after the 3.0 release and would eventually go on to lead the Windows 95 effort as the VP of the Personal Systems Division. Brad comes in, Windows 3.0 has just shipped. The first thing that is super, super obvious is as Brad observed everything going on with OS/2 land and everything going on with the core Microsoft culture, it was a complete clash. It was impossible for the pace of Microsoft. This is a super young group, all in their 20s. Some people in their 30s, but mostly 20s who just want to push the cutting edge, ship stuff. Think about Google in the early 2000s, just hire all the smartest people you can, set them loose, have creativity, and bump up against the edge of what's possible, both in terms of pushing the hardware, but also pushing even laws as we would later see. Let's just do what users love and see what happens. Let's just do what technology enables us to do and see what happens. That's the opposite of IBM's culture at this point. There's this huge cultural rift between what IBM needs and who Microsoft is at this point. What ended up happening with 3.0, it was unexpectedly loved. Microsoft was not really prepared for how much people were going to love the GUI, and with 3.1 it got really good. There was a small off site of the executives, and Bill and Steve basically decided that it was time to bet on Windows. That was the new strategy. Windows had always been plan B, and now suddenly it was plan A. When I say plan B, I don't mean thought they had a prayer of being plan A. It was 65 people that shipped windows 3.1. These were the misfits. It was not prestigious. The prestigious thing to work on at Microsoft was OS/2 and eventually Windows NT. But the Windows team in the Windows 3.0 era is almost the Mac team over at Apple. They were flying the rebel flag, they valued creativity over bureaucracy, even if it meant they weren't working on the prestigious thing. Suddenly, there's this huge strategic opportunity to become the standard independent of IBM if the platform is good enough, and then boom. The early reception to Windows is so good, it gives this glimmer of, that may seem really ambitious, but that opportunity is actually ours if we want to go seize it. Everyone took a big gulp and said, the GUI's the next big thing, users love this, let's take the ragtag group and promote them. David: This was, I think, the moment when Microsoft started to believe in themselves, really. If you look at the facts as we told the story, it was like, Bill did this great business deal with IBM, anticipated the rise of the clones in the first PC, won, and then Microsoft now was the thing, and IBM was the old thing. It wasn't until this. In this whole OS/2 thing, I think you can see, they felt like they were still little brother. They had to go along with what IBM dictated. Now they're like, whoa. Ben: Why do we again? David: Yeah, we're in control. Ben: The press is making a big deal out of Bill Gates. Boy Wonder, he's the youngest ever billionaire at age 31. By the way, when Bill Gates became a billionaire, there were not lots of billionaires, there were 50 billionaires. All this lore around the company, it's like they can do no wrong. But inside the company, I think they're like, we don't know the future of technology. Any wave could break against us at any moment, and this is all tenuous. I think that chasm kept getting wider and wider and wider of internally feeling like they're screwed and externally it's seeming this is the next great thing. David: Totally. I've got some fun stats on money and revenue around all this. In fiscal 1990, the year that Windows 3.0 shipped, Microsoft does $1.2 billion in revenue, making them the first software company ever to pass a billion dollars in revenue. Fiscal 1991, they do $1.8 billion. Fiscal 1992, they finally win the Apple copyright lawsuit around the GUI. Ben: By the way, the way that they won that, a judge basically looked at the paper and said, Apple, you totally said in all the future versions of Windows, they can use your UI paradigms. For most of the counts, they're covered. For these other things that you're trying to ask them about, those are not actually defensible. It's just widely accepted that these are UI paradigms now, and you can't enforce any ownership over those. It basically got thrown out. Apple tried to appeal all the way up to the Supreme Court, who said no. David: That's right. Like we've been saying too, they both stole from Xerox. Ben: Yes. David: Fiscal 1992 though, this is when Microsoft just blows the doors off. They do $2.8 billion in revenue in fiscal 1992, up from $1.8 the year before. That year, 1992 in October is when Gates finally passes John Kluge—Acquired OG fans, back to the LVMH episode—Gates passes John Kluge of Metromedia fame, media mogul to become the wealthiest person in America. Everything you're talking about, all the press comes around that. In January 1993, the crowning moment happens. Microsoft passes IBM in market cap. They have inherited the earth. They have inherited computing. Supposedly. I don't know if this is 100% true. This is written in one of the books I read. I read this. The folks involved will have to confirm or deny. Supposedly, the next month after Microsoft passes IBM in market cap—we're now in February 1993—the IBM board is in disarray. The empire is going down. They fired the CEO. Tom Murphy of Capital Cities fame who is on the IBM board, supposedly comes out to Redmond to sit down with Bill and personally ask him to come and be the next CEO of IBM. Ben: No way. David: Yes. This is what I read. I don't know if this actually happened, but this is what I read. Ben: Is that in Hard Drive? David: That's in Hard Drive, yeah. Ben: Wow. Listeners, there are some unauthorized biographies that we tried to corroborate as many of the facts as we can. But the ones where David's saying he doesn't know a source, it's these unauthorized ones. David: Yes. Gates obviously declines that. Whether or not that actually happened, spiritually, you could believe that happened. Bill and Microsoft are the new emperor here. This carries through to this day. We're going to tell in the next episode here, the antitrust, the fall, and all that, but not really. Microsoft's still the most valuable company in the world. They inherited the throne from IBM. It happens right here. Ben: It's nuts. Suddenly, Microsoft feels the full weight of everything that you have to do to build a platform and be a steward of an ecosystem. Suddenly, this huge effort began to try and make developers successful. That's how Windows would be successful if it was a great platform for application developers to thrive on. Cameron Myhrvold led the developer relations group basically to try and figure out, what do people want out of a platform, and how do we provide the APIs for them, the support, and everything in order to do that, all the documentation, all the help, everything? At the same time, Microsoft basically knew establishing a platform is brutal and requires bootstrapping a multi sided network of developers, users, and PC manufacturers. So 3.1 had users excited, but it was still very early. They could have lost that throne. Developers were not really yet targeting Windows. Microsoft had to show, we make great applications for Windows, too. The applications group really had to start doing Windows 3.1. David: Right, because developers were targeting DOS at this point. They were probably preparing for OS/2. Some of them were targeting the Mac, Microsoft itself, but nobody was targeting Windows. Ben: Exactly. You've got this big developer relations group effort that spins up. Meanwhile, there's a huge push with OEMs to get them to install Windows. At this point, they were still installing DOS or some people were actually installing nothing and requiring users to put operating systems on. There's a conceded push to get the OEMs to install 3.1. David: Yeah, and there are some people installing nothing. We should mention here, around this same time, this era, they move a lot of their OEM deals to a per processor licensing fee arrangement, which gets them in a lot of hot water with antitrust a few years later. Ben: Okay, this happened from 1988 to 1994. David, explain the per processor licensing agreement. David: Here's how Microsoft (I think) would position it to their OEM partners. You could pay us a license fee for every machine you ship with DOS installed on it, or DOS and Windows. You can offer other OSes too. But rather than that arrangement, we'll give you a cheaper per unit deal because you're going to ship DOS on everything. DOS is the standard, and we want Windows to be the standard, and Windows is going to be the standard. We'll make it more economically attractive to you, give you a lower per unit rate. If we just change the terms and say, instead of every unit you ship with, DOS or with Windows, every machine you ship, period, every microprocessor based machine that you ship, no matter what operating system is installed on us, just pay us a per processor rate. If you do that, you'll be paying us for every machine, whether you ship DOS or Windows on it or not, but you're going to ship DOS and Windows anyway. Ben: You may as well take the cheaper rate. David: You may as well take the cheaper option. Obviously, what effect does this have on competition? There's now a very, very, very strong incentive never to ship any other operating system. Ben: Yeah. Basically, you're going to pay for two different operating systems, even though you're only putting one on if you ever load a different operating system on. Yes, it very strongly incentivizes you to never ever ever ship any other operating systems on your computers as a company. This is of course the way that regulators would look at it in 1994. That would get Microsoft in some hot water, and they had to agree to stop doing this practice. The way Microsoft would look at it is, we're just helping our customers. Do you really think that these companies want to keep a whole separate ledger of what machines they shipped DOS on or Windows on versus what machines they shipped period? Wouldn't it just be easier if once a month or once a quarter, they could just report to us their total shipments like they have to report to their investors anyway, and then we'll just send them an invoice for all their machines? David: Totally. While antitrust and the government would seize onto this as a smoking gun, I think the reality is this was irrelevant in terms of the forces that made DOS and Windows the winners. They were already the winners by the time they started doing this. Ben: If this had happened earlier, you could see how this would be more of a compelling way to get market share. But by the time they started doing it, they were already running away with the market. David: Yes. Speaking of this new customer-friendly, buyer-friendly business practice from Microsoft, which I think is how they thought about it... Ben: Totally. They wanted to make the stuff that people wanted to use the most, and that's how they would win. Their goal was make the very best products, the best software we possibly can in the ways that people want to use and buy software, and then we'll make a bunch of money. David: Yup. As this changing of the guard is happening from IBM to Microsoft, I think part of this new self confidence from Microsoft is, wait a minute, why can't we go win the enterprise too and take that from IBM? We don't have to get in bed with them to sell to the enterprise. We should sell to the enterprise. Ben: The thing they were realizing is, well, we have made software that people like to use, so they're using it in businesses. They always wanted that to be the goal, but now it was happening. People are doing their work in Excel. People are bringing PCs to the office. Maybe businesses are buying their PCs, but people are actually buying them themselves and using them in the office. It just made them that much more efficient. Microsoft really had to figure out how to sell to businesses, but we actually have no idea how to do that. It sounds crazy today. The Microsoft you know today, as late as the mid-90s, really had no idea how to sell or build software for businesses. David: Totally. This is the first half of the original Microsoft vision statement coming true, a PC on every desk and in every home. Desk means work, means enterprise. In this era, everybody we talk to, gives 100% of the credit to Steve Ballmer.  Steve took it on his shoulders at this point in time when Microsoft is passing IBM to say, I am going to build, and we are going to learn as a company how to sell to enterprises. Ben, like you're saying, it's impossible to imagine now Microsoft not like this, but there's so much that they needed to do that they didn't have. Ben: In part because prior to this, personal computers were not used by enterprises. It was just not an enterprise tool. Now that it was happening, Microsoft had to figure out how to be the ones that would benefit from it. David: That meant selling to the C-suite at global Fortune 500 companies, most of whom did not use computers. Ben: Correct. Certainly, it didn't want to buy operating systems one at a time. David: Right. To the extent, members of the C-suite like CIOs or proto IT organizations used computers or were the computing centers in the company, they hated the PC. It made their life hard. This was when employees would bring a PC to work, plop it down on their desk, and start mucking around with stuff. It made things hard. Ben: And there really isn't yet a business server that couples nicely with the PC on the desk. You have this weird thing where there's a mainframe that is where the company's real enterprise applications run, but people are bringing PCs. Those PCs don't actually communicate well with anything else yet. They just are there for the employee to do their own work on a spreadsheet or something, print it out because finally 3.1 had printer drivers, and then deliver that. But it wasn't a system that operated with other systems in your enterprise. David: There's no email. This really was a business transformation task for the global Fortune 500. Ben: It wasn't like, hey, let's sell something to businesses that they want to buy. It's, hey, let's convince businesses that PCs are a good idea for their workforce to adopt. David: This was partnering with the consulting firms. This was building a direct sales force within Microsoft. This is building an indirect sales force within Microsoft to partner with distribution partners, with channel partners, with independent software vendors. This is building a customer service organization. This is building the executive briefing center on the Microsoft campus, and bringing CEOs and other C-suite folks there to Microsoft. It's building solutions for them, it's becoming a partner. It's everything that Steve is frankly just born to do. Ben: All of this stuff is pretty out of scope for this episode, including all the software systems you would need to build for the enterprise like Windows NT server, Exchange, SQL server, and Active Directory, the classic mid-2000s Microsoft stuff that they got known for. That is what this would all evolve into, and it really just started with everyone looking at Steve and saying, can you figure this out? We've all to date basically just been either running dev teams, running marketing, or running product groups, and been selling through retail or distributors in the application side or mostly through OEMs on the systems and operating system side. But can you go figure out how to sell everything we make in a completely different way to a completely different buyer profile and keep us posted on how that needs to change all the products we make in order to do that? That's a pretty crazy change. David: Yup. How it actually goes down, and we heard this from Steve and you heard it from other people, is so fitting. By the end of 1990, the Microsoft-IBM divorce is official. IBM takes full control of OS/2 development back from Microsoft. Microsoft ceases involvement. The breakup is official. This now gives Microsoft and Steve hunting license in the enterprise to go compete against IBM, but they have a secret weapon that is going to enable them to come take the enterprise from IBM. Ben, tell us what it is. Ben: It's painfully obvious. It's Microsoft Office, and it's the fact that the whole workforce is already using Microsoft Office. Everyone loves to talk about product-led growth and how it's this new thing in the late 2010s, how Slack, Atlassian, Trello, and everyone figured out PLG. This bottoms-up workforce-adopted way, rather than selling to procurement, IT, or the central administrator. And it's just not new. David: No. This has always been the case, and Microsoft invented it. Ben: All the employees wanted to use Excel and Word. They were doing it anyway. At some point Microsoft needed to figure out how to take advantage of selling it centrally and how you do business with other businesses, rather than selling a zillion retail copies of people who are using it illegally for their work. David: There's so many things that are beautiful about this. It's the legacy of this bet on the Mac, bet on Excel, and bet on Windows shortly thereafter, that enables Microsoft to go into the enterprise because even though they've just broken up with IBM and OS/2 isn't going anywhere, it's not like Steve can just go knock on the door of some banking CEO or C suite and be like, I'm Microsoft, come talk to me about how you're going to use Microsoft products in your organization. But rather it's like, hey, thousands of people in your organization are already using Excel. Let's have a conversation about how we can make that work better for your organization, and what else Microsoft can do for you. Ben: Absolutely. Next episode is going to be all about the enormous success of becoming an enterprise company, the enterprise agreement, cloud, and everything that came after that. But we have two chapters left in this episode, and they happen concurrently within the systems group by two very, very different teams, and that is Windows 95 and Windows NT.  David, let's start with NT, and then our little cherry on top can be 95 to close us out. How did Windows NT happen? David: Perfect, and it's intertwined with the beginning of all this enterprisification of Microsoft. Okay, Windows NT. Remember, IBM's whole goal with OS/2 was that they saw the trajectory of the PC was going to eat into traditional mainframe type applications in the enterprise. They wanted to recentralize and own the PC enterprisification of workloads. NT is, after the divorce, Microsoft being like, screw that we're going to do the same thing and eat your lunch. The initial work starts out of the work they had been doing on OS/2 with IBM. But then in October 1988, as they're heading towards divorce, Microsoft hires Dave Cutler away from DEC. Dave is an absolute beast and legend. He's still writing code at Microsoft today, which is amazing. Ben: Isn't that crazy? He's in his 80s. David: Amazing. Dave at DEC wrote the whole operating system that DEC ran on VAX. Poaching him away to come work at Microsoft, he's the guy that's going to build an enterprise-ready, take share away from the way traditional enterprise computing is done onto the PC. He's got the chops to do this, he's also got the credibility to do this. Ben: He's written a widely-deployed enterprise operating system. David: Yes. Him coming to Microsoft, him leading and building this effort, gives Steve and the sales force so much legitimacy when they're going in and talking to the C-suites, the CIOs, the IT departments, and enterprises. Ben: Even though they don't yet have an enterprise product to sell, they've got DOS and early Windows, which is essentially consumer-targeted, but now they've got this guy, Dave. David: Yes, now they've got Dave. Ben: We should say, this is really the first time they brought in someone who had real industry experience. In 1988, Microsoft was 13 years old, so Bill Gates would have been 33. Everyone is in their late 20s and early 30s, and Dave's mid-40s. He's like, you know I've seen a few things. David: I think it was Dave and also Mike Maples coming from IBM too. Mike obviously wasn't a technical leader but on the business and strategy side, too. NT, we'll talk a lot more about it on the next episode. But spoiler alert, it is the vision of what IBM wanted OS/2 to be, but it's Microsoft's version of it. Ben: It enables all of your desktop computers at the company to join and network together in a compliant way. It enables an internal server that everything communicates with. It enables a directory of all the devices on the network and all the people in your organization. David: Soon with the Internet coming, it'll enable servers that face externally from your company. The punchline here is that NT becomes the seeds of Windows Server, the business line, which become the seeds of Azure today. Ben: The other important takeaway on NT is it was going to take a long time to build. It was going to take a long time to test. It was going to take a long time to sell and deploy, and it was going to have really strict requirements for what it could work on because it's a power hungry operating system built for enterprise IT administrators. That is not your short-term product strategy. That is a long-term bet that a team is going to work on concurrently while you're figuring out what to do after Windows 3.1. In 1991, Bill Gates sums this up in a memo where he says, “Our strategy is Windows. One evolving architecture, a couple of implementations, and an immense number of great applications from Microsoft and others.” Every word in that sentence does a bunch of heavy lifting.  You got one architecture. Okay. I think what that basically ends up meaning a few years later is one application programming interface (API) that developers can target so that when they want to write a Windows app, it works on both NT and whatever the evolution of 3.1 is. That's one architecture, but it says one evolving architecture. That buys Microsoft a little bit more fluidity in the one architecture that's being targeted. Then you hear a couple of implementations. This basically says, even though developers are targeting what became the Win32 API, the one way that we write applications, there are two different implementations. For many years, they would display very differently on NT systems versus—spoiler alert—Windows 95, the successor to Windows 3.1. David: By Windows 95, you mean Windows 4 that was supposed to ship in 1993? Ben: Yes, I do, but it's so much sexier to say Windows 95 and name it after the year that it actually ships. Yes, an immense number of great applications from Microsoft and others sheds light on the DRG (Developer Relations Group) strategy. We got to go out and be massive evangelists, and everyone in the systems group is looking over at the apps group going, did you see that? Bill Gates just said our strategy is Windows. We're now the Windows company, and that includes great applications from Microsoft and others. What does that mean, applications group? Let's go first and best on Windows, get to it. I just think that sentence says it all for what we're looking at 1991 through call it 2000 or so. David: Yup. We just spent a bunch of time talking about the enterprisification and all the amazing enterprise stuff that the seeds get sewn from Microsoft at this point in time. This era is also the heyday of the consumer PC. In 1993, Jensen starts NVIDIA, graphics cards are becoming a thing. PC gaming is becoming an industry. You can even look at Minesweeper as being a seminal moment in terms of the consumerization, these devices, these personal computers becoming companions to people's lives like the phone is today. You've got CD-ROM technology, multimedia, Encarta. The heyday of the consumer PC is here in this era. Ben: Totally. Even before Windows 95 shipped, they had 75 million Windows users. This is even before you get plug-and-play, multimedia, or networking. This is on Windows 3.1. Crazy. We've been leading up to what we've been building hype, Windows 95, or should I say Chicago? The Chicago name, for those of you out there who were paying attention when this was under development, and you were all excited about what Windows 95 would become—and it's probably 1% of our audience or something who knows the Chicago code name—they wanted to create an OS for the everyman, one that was easy to get to, a nice quality of life when you're there, it was affordable. Chicago is the perfect name in every way. It is also a contrast to what was going on in a different part of Microsoft, where there was the codename of Cairo for a very ambitious next generation operating system. Mind you, NT had already come out in 1993. Cairo is this general bucket of maybe it's post-NT, maybe it's part of NT, but this is a really sophisticated, crazy set of technologies that we're going to eventually bake into an operating system. It doesn't really have a release date. No one really believes in any of the release dates that are proposed. The Windows 95 team, the Windows 4 team, the Chicago team, loved contrasting this idea of a far flung land that's really ambitious. Who knows what it'll actually be like? Chicago is something we know quite well. You get on I-90 from Seattle, you drive for three days, and you're there. That is the goal. That's the spiritual thing about Windows 95. David: Pizza, the bears, the cubs. Ben: 100%. We should say, Cairo never shipped, so there's a lesson in that. David: Might as well been called Oz. Ben: Or Longhorn. David: Right. Okay, all right, we're getting ahead of ourselves. Ben: We are getting ahead of ourselves. Windows 95, let's start with the launch event itself. It was a huge, ridiculous, insane day in Redmond, Washington. They set up tents all over Microsoft's campus. They flew in journalists, beta testers. There was a movement around Windows 95 in a way that you would not believe. It was an operating system launch, and Jay Leno launched it. It wasn't like Jay Leno did some stand up, it was Jay Leno for 90 minutes in a tightly scripted environment, co-hosted with Bill Gates all of the fanfare and festivities. David: There is no other word to describe the Windows 95 launch besides glorious. I am so glad that this stuff is preserved on the Internet and on YouTube, and that we could experience it ourselves over the past month. Ben: It might be the peak moment of pure joy to celebrate technology before a lot of the skepticism came in and the tech haters. David: The DOJ. Ben: Totally. It was unabashed celebration of software is probably the best way to put it. Microsoft license Start Me Up famously from the Rolling Stones. David: It's amazing, a software company licensed Start Me Up by the Rolling Stones as the official theme song of an operating system. The idea that this would be happening, certainly back in 1975 when they were moving to Albuquerque, but even just a couple of years earlier, this is breaking new ground. Ben: Totally. The other thing that's happening in 1995 is the Internet hype is starting to build, but we will table that for next episode. Right at this point in history, only 14% of Americans had internet access. It was still very early, so there was no guarantee that any story posted online would actually reach the masses. Microsoft had really relied on traditional broadcast coverage of this event, and brought in all these journalists, all these print magazines, and all these newspapers to build the hype. I watched the whole keynote yesterday. At the end, they ripped down the back of the tent behind the stage. There's the entire development team in the red, yellow, green, and blue squares of the Windows logo sitting outside on the big sports field on Redmond's campus. There's only 360 people that built Windows 95, so it's still a small team, but they're all there. They're fired up. They're part of the moment. That's the launch event in Redmond, at least. Around the world, people are lined up around the block to buy an operating system. There's a lot of news coverage of that. It was basically the iPhone launch of its day. They lit up the CN Tower, the Tower of London. This date, August 24th, 1995, they basically treated an operating system launch the way that you would launch a movie or a new Madonna album. It was a marketing case study, so much so that the folks from Coca-Cola actually reached out to Microsoft to ask them, how do you do marketing this well in the new age? David: To the Bill Gates quote with the Warren Buffett talk at U-Dub. Ben: Yes. This is a company that freaking invented Santa Claus to sell us all sugar water, and they're calling Microsoft asking, how do you market in this new era? It was that successful. They launched concurrently worldwide in eight languages. This thread that Microsoft had of early international continued all the way through to this moment. They invested heavily in doing all of the localization and help stuff so that the whole world really could adopt something all at one time. It really was the perfect product at the right time, the Internet, games, all of that. David: There's so much about Windows 95 too that I'm sure you're going to get into, but the start menu. It was so perfect because this was the peak of the PC going fully mainstream. Nobody had ever treated software like this before. Ben: That's the takeaway. They thought about software in a completely different way. Yes, the start menu, while it got cluttered, complicated, and messed up over time, the idea of a button that you click to start using your computer was very appealing to people. David: Totally. The Mac obviously shared a lot of these elements, but it was at so much a smaller scale. Ben: The Mac just never had any real PC penetration. From the IBM PC forward, it never had big market share. David: This was your grandmother coming into the digital world. Ben: That is how they tried to market it. They market it as people on job sites using Windows. They marketed it as people doing crafts. There's someone who's modeling something for an F1 car. It's just fun watching all these old videos and seeing all the different personas. David: Computer companies love F1 cars for demos. It's the ultimate aspirational demo. Ben: I must say this all pains me deeply as someone who never owned a PC, grew up using a Mac, loved every bit of my Mac. I was even an apologist in the OS-9 era of this isn't very good, but I'm still going to say it's good. I was on the OS-10 public beta. I only clicked a start menu when I was fixing a teacher's computer at school. Even though the takeaway here is everyone thought this was a great operating system and it won the market, I always looked at it like, well, it's not a Mac. David: That's how Mac users always look at Windows. Ben: The way that Apple products became mainstream always felt odd to me as someone who was using them when they weren't, but it's been interesting gaining a new appreciation for Microsoft through studying their history that I absolutely did not have as a user during this era. David: Having this discussion now makes me think, Windows 95, they did what Apple tried to do in bringing Scully in. Scully came from Pepsi. Obviously, that didn't work, but Microsoft, they're the ones who did it. They're the ones who mass-marketified the computing vision. Ben: It was the wrong strategy for Apple, and it was the right strategy for Microsoft. Apple has always, at least in my opinion, created a better computing experience by being completely integrated. It's the Alan Kay quote, "Anyone who cares about making great software needs to build their own hardware." The complete integrated package that Apple offers, I have always found to be the best computing experience. And it doesn't scale. David: It didn't in that era for sure. Ben: In that era, yeah. The way to scale is Make the software that is going to get distributed on the most PCs, and then that is the most interesting to software developers. It is the most interesting to consumers who want the software and IT buyers who want to buy the standard thing. Apple's strategy versus Microsoft strategy in this era, Apple was always going to be a bit player rather than the scale winner. The trade off is lots of PCs had blue screens of death, Apple never had blue screens of death. Where do blue screens come from? It's driver problems. It's that the printer is not speaking the same language as your particular computer and what the operating system knows about your computer, and are the device drivers right for your particular version of whatever's on your motherboard? Apple never had those issues, but they also had very few units shipped and much more expensive product. David: Sidebar. That Alan Kay quote about if you really care about software, you do your own hardware, makes so much more sense to me now having done this episode, because he's coming from having made the Alto and the graphical interface there. The only way that he could have made the GUI on the Alto was basically building a mini computer. Ben: Isn't that crazy? David: It makes so much more sense now. Ben: A little bit more on Windows 95 before we finish the story here, it is remarkable to reflect that it took 5–6 years to go from Windows' plan B to Microsoft being extremely right that that was the franchise, that was the bet to bet the entire company on. As Brad Silverberg put it this way to me, he said, Windows 95 cemented Windows as the franchise product for Microsoft, which interestingly it was not yet. David, this is crazy. It would remain the franchise product for the next 20 years, perhaps 5 or 10 years too long, but we'll save that story. David: Yeah. Just to put some numbers on this, August 24th, 1995 is the launch event, the glorious day. Windows 95 comes out. It sells a million copies in the first week, seven million copies in the first month. Fiscal 1995—this is the 12 months ending in June before Windows 95 comes out—Microsoft did $5.9 billion in revenue. Fiscal 1996, they did $8.7 billion. Fiscal 1997 when Windows 95 is really going, they do $12 billion in revenue. First software company to pass $10 billion in revenue, already the most valuable company in the world. They are a monster. There is no other way to put it. Ben: It's crazy. From a product perspective, there was just so much really got smoothed here. This was a user experience where they finally had time to think, what actually do users want to do with an operating system? What features should be part of the OS, and what should we delegate to applications? What are modern networking technologies that we should bring in? I don't want to foreshadow too much, but how should the Internet be in a modern operating system? That was a huge thing. The multimedia, the video stuff. An operating system really showed up and said, we thought about this experience for you. You're looking for where to start, you're looking for cool stuff to do, and you're looking for it to not break on you. We now finally have a complete story around all of that. A couple of interesting technical notes, it was basically all new technology. If you try to look this up, it will tell you, Windows 95 was DOS-based. It still used DOS in fallback situations for older DOS applications or drivers. But for most of the time, it was no longer true that Windows was just an operating environment on top of the DOS operating system. Windows had now become a true 32-bit operating system of its own. Windows did all the heavy lifting. It had its own file system. It accomplished a lot of the user experience magic and speed that it was praised for by rewriting a lot of this from scratch. This was the beginning of Windows as its own OS. You can see that actually change in the marketing messages that change from operating environment to operating system.  David, that brings us to the end of our chapter one. We've got plenty of analysis here to do, but my God, what a first 20 years for the company. David: We knew this was going to happen. This is why we waited 10 years into Acquired's life to cover Microsoft. It's the most important company in the world still today. It was so fun researching, going back and doing all this because there are so many different perspectives, and so much has been written. I don't know if we've gotten it right here, but I feel like every other major attempted storytelling at this has not gotten it right. Getting to go talk to all the people who were part of this... Ben: Yeah, living in Seattle is quite helpful. David: Yeah. We really got that sense of like, there's still a story to be told here. It's never been more relevant again than today. All that to say, I'm glad we waited 10 years. Ben: And there's all this stuff we miss. I didn't mention Microsoft Research. Microsoft Research was a lot of people and a lot of money. David: Microsoft tried to buy Intuit too along the way. That got canned. Ben: Actually, the start of research is interesting. I'll say this real quick. In 1991, Nathan Myhrvold started Microsoft Research, and the logic is fascinating. Basically, everything Microsoft had done until that point was taking things from mainframes and mini computers, and adapting those tasks, those jobs to be done for personal computers. At some point, they looked around and said, all right, well, we did it. All the personal and business applications can now be run on personal computers, so we have to come up with uses for future technologies in order to continue to drive the ecosystem forward. There's no more low hanging fruit. I thought that was an interesting thesis of why to spin up a research division at that point in history. David: Yes. Let's move into analysis. Ben: Okay, great. Playbook. The big interesting one that I want to start with, and it actually involves a chapter from the story that we just glossed over, is capital efficiency allows founders to control their own destinies in a way that you just don't get when you're selling off huge chunks of the company in order to accomplish your mission. David: Yes, I love this. Ben: Let's just talk through the cap table over time and how the company went public. We talked about the partnership being 64% Gates, 36% Paul Allen. In 1980, Steve Ballmer comes in and gets 8.5%, 8.75%, or something that percent of the company, so dilutes Gates and Allen down. In 1981, just a year later, they take the VC investment for 5% of the company from TVI. This also, I'm guessing around 5% trying to reverse engineer some of the numbers. They also created an option pool, where they were then creating opportunity for basically rewarding management, which is how there were 10,000 millionaires created in the Seattle area from Microsoft. David: That's the amazing thing. The option pool doesn't get created until late in Microsoft's life. All those Microsoft millionaires only came from whatever size that was, 5% of the company or whatever. Ben: At IPO, even with all this dilution, you've got the Ballmer dilution, the VC dilution, and the option pool dilution, Bill Gates still owned 49% of the company. That's pretty unprecedented. He wasn't the only one with a big chunk. Paul Allen owned 28% of the company. Steve had 7.5% of the company. This company was basically owned by the three more or less co-founders. A little tiny option pool, and then a VC who ended up with 6.1%. I think Dave got some more shares from being on the board. You just don't see companies that look this anymore. David: This is Bill's company. This is their company in a way that no other company is these days. No venture-backed company going through the modern era is like that. By the time you get to be public, you may still be the largest shareholder as a founder or CEO, but it's not your company, far from it. Ben: Absolutely. I'm trying to figure out why they were able to be so capital efficient. Is it just that software was such an unbelievably good business model compared to everything else that existed? They didn't need a lot of working capital, everything was high margin, they could grow really fast. Or it was just an era before much competition. They didn't need to out-raise their competitors. Once they got a little bit ahead, there was really no way for anybody else to close the gap, assuming that they executed well. David: I totally think it's the latter. I think it's that the minimum fixed cost threshold to be that, in Bill's words, slightly better than your competitors and get the positive spiral going, was low enough that it could be paid for just in Bill and Paul's time and effort. There was that unique moment at the beginning of the software industry where that was true, and that would never be true again. Ben: That's so, so, so insane. There was no one else really with the knowledge either. Even if someone else came in with a big $1 million check and gave it to a competitor, in 1975, how many people could really write these language interpreters? David: You couldn't buy the experience having written emulation software for microprocessors that Paul had. Ben: They had an obsession and an obscure skill that turned out to be one of the most valuable in the world in an area where there was a freak law of nature in play with Moore's Law that was so unintuitive, that you had to think from real first principles to understand the impacts of it. David: I think there are two freak laws of nature's one. (1) There was Moore's law that they were benefiting from. (2) There was the zero marginal cost of software. Ben: That's true. It's this complete perfect storm that enabled them to build a highly defensible business without really any investment ever. This is the largest company in the world, the most valuable company in the world that was entirely bootstrapped. David: Even though they raised money, not a single dollar of investment actually happened at this company. Ben: No, and in 1986, when they actually did go public, they raised $45 million. They never spent that because they generated much more free cash flow than that that year. David: It was just a means to an end of getting public. Ben: And they needed to for the reason that they had been granting so many stock options from that little option pool to employees that they were going to blow the SEC's 500 shareholder cap. They projected 1987, so they wanted to go public on their own terms in 1986, not when they had to buy SEC rules. David: Also, Microsoft needed to be a public company. If you're going to be an important company in the world at this scale, if you're going to first ride the bear with IBM but then inherit the earth from IBM, you got to be a public company. You can't be a private partnership. You're not going to go have conversations with C-suites and CEOs of Fortune 500 companies if you are a private partnership in this era especially. Ben: Maybe. I don't know. I'd agree with you if you had a bunch of short-term capital interests that owned your company, but if it's all founder-owned, there are great, large private companies in the world. David: Yeah, fair, true. Ben: Coke Industries is a trusted company by a whole bunch of their customers. Cargill is even bigger than that. There's a bunch of European industrial and shipping companies. Rolex. There are privately-held, big, important companies in the world. David: For sure, but none of those companies are Microsoft. Ben: That's true. That's very fair. Especially getting to the stage that they eventually got to being the trusted partner to governments around the free world, that requires being a public company. David: It's funny. This playbook theme, this was a moment in time and a set of factors where this worked. I guess the lesson is find an industry in its infancy, be capital-efficient, and run the table. Ben: That has unique economic conditions that have never existed before to create these magical businesses you could never fathom before this new technology thing existed? It's an impossible thing to wish for. It may never happen again. We may never get another Google either. David: That's what I was going to say, it did happen again, it happened with Google. Ben: But how many things can you collapse to zero? I think that's the question. With Microsoft, they were able to collapse their marginal cost to zero, but they still had distribution costs, and then Google collapsed distribution costs to zero with the Internet. What's a big cost that a company has now? Maybe AI will collapse. You no longer need 50,000 employees, you can have five employees. Maybe it can collapse that to zero. You need something of that scale, which is, where does a company spend most of its money that suddenly it can spend no money on? I suppose actually it is on the human capital. You just look at big successful companies and look at what they spend money on. Those are the candidates. David: Good point. Still unlikely we'll ever find another Microsoft opportunity. Ben: Yup. Other fun things on the IPO, do you know who IPO'd the day before Microsoft did? David: No. Ben: Oracle. Oracle had a nice pop, which actually helped Microsoft price a little bit higher in their IPO. That is another episode we have to do.  Another thing adds yet another layer to the insanity of everything that we've been talking about of why they were able to build such a successful company on such little capital, I don't think there has ever been a tailwind in history like the one that Microsoft had with the secular growth of the personal computer wave. The only thing I can think of that is comparable is Amazon with the growth of the Internet, powering their early growth. Here's the stat. From 1975 to 1986, 11 years prior to their IPO, so founding to IPO, PCs grew at a compound annual growth rate of 98%. It grew from 4000 units per year to 9 million units per year shipped. You can almost not mess up when you have a tailwind that. David: Especially when you are the linchpin player. Ben: They managed to make themselves the point of integration for the whole industry. Oftentimes, I find myself when we're looking at these companies that are among the most successful in the world or like Microsoft, the most successful in the world, it's basically a multidimensional multiplication problem.  They had this unbelievable one in a zillion thing going for them, which you can multiply by this other one in a zillion multi thing. It's the zero marginal cost, zero distribution cost, unbelievable secular growth of the PC, Moore's law happening. They're the single choke point for the whole industry. It's just crazy how many things you multiply together, and of course it should end up in a number over three trillion. David: Yup. I'll jump in with a playbook theme that we referenced a little bit in the episode, but we really got a highlight here. Bill, Steve, Paul, and everybody at Microsoft, were incredibly talented, incredibly smart. They saw the future in a way nobody else did, but they also were willing to hedge their bets. It's not like they just got everything right. They were going to get things wrong with OS/2, but they hedged the bets with Windows. I think that is such a key lesson of when you're in a really dynamic market like this, in our ecosystem right now in tech, venture capital, startups, whatnot, people put so much value on conviction. I have conviction. This is what the future is going to be like. I think the Microsoft story is the opposite of that. They had conviction that software was going to be big. Ben: And personal computers. Creating software for desktop computers was a really good idea, and they wanted to be the best at it. David: Yeah, but the exact path of how that was going to play out, they had very little conviction and were willing to be very flexible. Ben: You're right. It's both the hedging, but also then the ability to read the world and quickly, entirely change your strategy if you need to, and having your hedge be far enough along that you can jump quickly to it and shift your whole organization to get on board with it. That's a hard leadership thing to do. David: Totally. I can't wait in the next episode to talk about the Internet tidal wave memo. That's related to your playbook theme too. You can't really do that if you don't own 49% of the company, if it's not your company. Ben: Which I think you're seeing play out with most CEOs today. There's a big difference between a founder-CEO and the stuff that they can do. Zuckerberg with the metaverse or Jensen with betting the whole company and going all in again on AI versus Tim Cook or Sundar Pichai, certainly a very different type of CEO. Satya is interesting. Despite the fact that he doesn't own half the company, he's got a lot of founder-like control, which I think is pretty interesting. David: All right, don't get ahead of ourselves. Ben: Moving along. Other playbook themes, a big one that jumps out to me is that new generations of technologies enable market dislocations. Unless you are in a transformational moment in terms of a new technology came out that enables something that wasn't possible before that's going to rearrange the whole value chain and open up new markets, it's pretty hard to go challenge an incumbent. No one was going to challenge IBM really until the microcomputer, even the minicomputer people. Did DEC really challenge IBM? Not really. It never made a dent. David: It wasn't a full platform shift in the same way. Ben: And there are these little blips of it. The GUI I think meaningfully reshuffled the DECs. Those are the moments where you can have meaningful new entrants. Otherwise, you have to bide your time and just build your hedges and see. Related, even if you are the incumbent being disrupted, it is possible to have a very, very large and durable revenue stream that can go on for a very long time. What I'm referring to in this particular example is despite all of the dethroning that we just talked about, Microsoft would not eclipse IBM in revenue. You mentioned market cap, David, but in revenue until the year 2015. Isn't that nuts? David: I intentionally didn't look up revenue because it made the story muddier, but wow, there you go. Ben: I think that's the point. Microsoft's perception by the market, I'm sure they were growing faster, I'm sure they had better gross margins. I'm sure there was a better story there, so there's a multiple that comes out of the story. I'm sure there are lots of good reasons why Microsoft became more valuable than IBM very early, but IBM's revenue did not peak until 2012. What? Long after public perception moves on, customers still get value from something created by incumbents for a very long time. I think that's something we often forget about in the buzzy Twitterverse of like, oh that thing's over. It might still grow for another 20 years before it's over. David: That also just speaks to the nature of the enterprise business, too. Ben: That's a good point. David: IBM was the enterprise business. Today, Microsoft is the enterprise business. Ben: That's true. Peloton revenue can dry up a lot faster than contracts for mainframes. What do you got? David: A playbook theme that I want to highlight that really, really came out in our conversations is Microsoft was not just a talent magnet, the talent magnet during the PC era. If you were an ambitious young person, this is where you wanted to be.  It was on every dimension. If you were an ambitious young technical person, that's where you wanted to be. If you were an ambitious young salesperson, if you're an ambitious young marketing person, that's where you wanted to be. They just had this culture there, which is so funny. We'll talk in the next episode of how that culture really fell apart for a while there. I asked a lot of these early people that we talked to, what was it being there? You guys worked yourselves half to death. Were you mad about that? Did you resent it? Were you just making Bill rich? They're all like, no. Yeah, we neglected every other part of our life, but that was the good old days. This was the magic, we were making it happen. Ben: That totally comes through. I asked Brad, why did Windows 95 work? There's lots of structural reasons, but he said, we basically did two things. (1) We laid out principles for product and then pushed responsibility down. Developers were often their own PMs. There's this idea of once you got the principles, we don't need to write a zillion specs, design something three times, and pass it through three functions. You know the principles, make great software that follows the principles. (2) He said that everyone felt personally responsible for the product, and it really showed. David: Anybody you talked to from this era of Microsoft, this was their life's work. No doubt about it. Ben: Something we touched on a little bit is the benefit of scaling with OEMs. This was the contrast against Apple, where I said Apple was always going to be a niche player by the way that they designed, built, and packaged everything themselves. Apple is in many ways like the AmEx, where Microsoft is the Visa. On our Visa episode, it just became so clear that Visa could quickly take over the world at MasterCard by being an open network, where they didn't have to do all the work to scale themselves. They could distribute to a bank, partner with a bank, and then boom, each of the banks that was on their network could independently scale at their own rate, which created obviously compounding effects for how fast Visa and MasterCard could scale. The same can be said of Windows. David: Totally, the OEMs. Yeah. Ben: I think the Microsoft OEM team for Windows was 20 people or something. Before the enterprise, in this era that we're talking about, the group of people responsible for go-to market for Windows was really small. They sold some retail, but the team was just about, hey, make sure HP and... David: Compaq, Dell, and Gateway. Ben: Exactly. That was their go-to market, and it makes your scaling unbelievably efficient. David: Dude, you're getting a Dell. Ben: Dude, you are getting a Dell. Similarly, I think the fact that they went international early was this very powerful constraint. It meant that every time they shipped software, they had to make it globally ready quickly. That meant that if there was any network effects to your software, anything becoming a standard, Microsoft was just way better positioned to become the standard than anyone else was. On top of there being network effects, there's also scale economies. A word processor is a word processor. The extent that you have customers in every country who can buy your one piece of software, you can amortize the development costs over a huge user base so much more quickly. David: 100%. Ben: The fact that they forced themselves to be international early meant that every product after that also had to figure out how to do all the localization, training, and all of that to get all those effects too. David: No matter how much time, money, and resources you have to spend to localize Microsoft word into kanji, it's a lot less time and resources and money than developing Microsoft word. Ben: Exactly. They just realized that so early. They also realized that most people who were doing some localization would do a shoddy job. They would think about it as lesser than the US market. They just did a good job at localization. They just cared. They thought of it as this is a strategic pillar that in every country, everyone experiences our software to the same quality because it's our brand everywhere. I don't know. I just think that is not how the rest of the industry thought about it. David: Definitely not. Ben: On top of all of this, the way that they executed it through subsidiaries was pretty genius. Redmond did not control international. They spun up country managers and subsidiaries in each of these countries in a ton of countries. While Redmond did the product development and then did the engineering work to do localization to all the strings files and everything for those countries, the actual marketing messaging, the sales strategy, and the sales structure, happened in country that was owned by a person who lived there so they actually could think through, what is the best way for people to receive this software here?  Again, that's just going to yield way better results than if you're sitting there armchair quarterbacking at Redmond thinking about how a person in Chile is going to receive your marketing message. One other that I have is this one that we didn't really talk about, but Microsoft famously was not first to market with basically any of their applications. They aren't even really today in most cases. You think about the strategy that they had early on spreadsheets, word processing, all these were copycats at their outset. Sometimes they would do an acquisition, but most of the time they just look at a product and say, huh, our software should do the same thing, and they would copy it. They had no shame in doing that. They had their eyes everywhere looking for good ideas, they had reverence for the good ones, and then they would just incorporate them. On top of that, they wanted to make the software very easy to switch to. A lot of the keyboard shortcuts in Excel to this day are there because they were originally the Lotus 1-2-3 shortcuts. They wanted people to have the same muscle memory that just worked. Fundamentally, what this does for you as a business is it just leads to better risk adjusted returns. You already know what's going to work before you ship it. You don't really take market risk. You're not going to be the first to the market with early adopters, but most of the time, you actually don't need to be to win.  I think Microsoft own that idea. Most of the time people are sheepish about it. Steve Jobs famously said, Microsoft has no taste. I think that's another way to put it that it's copycatting. David: I do agree with the premise, with all of this. I think doing this episode though has made me think there's a little more nuance to it. Yes. In broad strokes, you can say that's what Microsoft strategy was with applications over the years, but the Microsoft versions never actually won until there was a platform shift that they could take advantage of to beat the incumbent. Microsoft wasn't going to beat Lotus 1-2-3 until the graphical paradigm came along, and then Excel being graphical was just obviously so much better. They tried with Multiplan, they failed. Multiplan was fine, but 1-2-3 was the winner.  The nuance to me is yes, but it's more like with the resources of Microsoft and the timeframe that Microsoft can afford to have, they can afford to start building the application, start building the product, getting into market, start learning, be positioned that then when the paradigm shift comes, leap ahead. Ben: That's a good point. It's also different. The Lotus 1-2-3–Multiplan thing, in that era, Microsoft just didn't have great distribution yet. Lotus 1-2-3 just got pretty far ahead of them, and Microsoft had no way to catch up. A few years after that, that would basically never be true again. David: That could be true too. Ben: I will say, you touched on something that's an interesting corollary to this. Their first versions of software famously are not good. You look at Windows 1.0 and 2.0. They know that it's part of the strategy, and they were world class at learning from customers and integrating customer feedback into subsequent versions. There's always this saying of Microsoft doesn't have a very good first or second version, but the third version of something is typically pretty good. I think that fact pattern definitely follows. David: I'm curious your thoughts on this. I'm so surprised. One thing that you have not brought up yet on this episode is you were a PM at Microsoft for several years. Ben: I was, but it was such a different era in that 2012–2014 era. I guess 2011 is when I started as an intern. I'll have a lot of thoughts on it next episode. David: Okay, great. I've got one more playbook theme before we move on to power. Microsoft figured out software before anybody else, and they figured out so many aspects of what it means to be a software business before anybody else, but they figured out that software is never done. I do think a lot of their competitors, we didn't obviously didn't study Lotus to the same degree that we studied Microsoft here, we didn't study WordPerfect, et cetera, but I think there was a mindset that a lot of other folks are like, you ship software, and then the software was done. That was not the culture at Microsoft. This is related to what you were just saying. Shipping software is the beginning. You are always working on that software. You're working on next versions and stuff, but even before the next version, the work of software is never done. Ben: Of course, if you own the hardware, you definitely think of it more of like, well, we ship them, the big cabinet of things, we install it, and we fix it if it's broken, but we've sold them hardware. The software is required to run it, but the thing we sold them is the hardware. If you're a pure software company, you think about the world differently. You're like, well, I can always ship you another CD, another floppy disk, over the Internet. It's obviously very different. But because there weren't really software companies before them, of course people didn't come from that mindset. David: I think you still see the legacy of this right to this day in Apple versus Microsoft. Apple still is on a yearly software release cadence, which is ridiculous. Whereas Microsoft is on the cloud, it's all constant. It's all constantly shipping. Look at AI, look at OpenAI. The software is never done so deeply in the software business model. Ben: That's true. David: All right, should we move on to power? Ben: Yes. Listeners who are new to the show, we do this section based on Hamilton Helmer's seven powers framework. The question is, what is it that enables a business to achieve persistent differential returns, or to put in another way, to be more profitable than your closest competitor and do so sustainably?  The seven are counter positioning, scale economies, switching costs, network economies, process power, branding, and cornered resource. David, I am pretty sure I could make a case somewhere between 1975 and 1995 at Microsoft for all seven of these. David: Totally. Ben: It's one of the most defensible businesses they built in history, so of course they would have all seven of the powers. David: All right, let's run through each of them and do a quick 45 seconds on each. Ben: Great. Counter positioning. I think the biggest example of this comes through where Microsoft is basically willing to jump on the microcomputer revolution before the incumbents were. IBM did not want microcomputers to happen. When they started to happen, IBM tried to figure out how to slow it down and reintegrate it into their old business model. Microsoft basically had no baggage. This is classic innovator’s dilemma stuff. They could say, well, we don't need to make any money on hardware. We don't need to even make hardware. We are free to become the whole point of integration for the entire ecosystem just by shipping bits. And that is crazy. David: Actually, related to that—I can't believe we haven't talked about this in the episode until now—Microsoft could enable other companies to be successful. You talk to Microsoft people, they always talk about themselves as a platform, like we're a platform. Other companies grow on the back of Microsoft. That was not true for IBM. Totally not true. Microsoft could make Compaq successful. Microsoft could make Lotus successful. Microsoft could make Intuit successful. Microsoft could make Netscape successful. Ben: We keep talking about Microsoft as the point of integration, choke point, dependency, or standard for the whole ecosystem. Given that, it is quite remarkable how much value they created on top of the platform versus just captured for themselves. There's that famous Bill Gates line, you want your ecosystem around you to be generating more revenue than you are taking for yourself. They did a ton of that. It's the OEMs, and it's the application developers. David: That's major counter positioning. Okay, that's one. Ben: Scale economies. David: That's everything we just talked about in Playbook. Ben: It's unbelievable. When Microsoft has an install base of 100 million people using Excel—in this episode, let's just say 10 million people who are using Excel—and suddenly some up and coming spreadsheet comes out with a cool feature like auto sum, fill down, draw borders around the cells, or whatever, suddenly, Microsoft does a tiny bit of dev work. They can reap tons and tons and tons of value for doing that that the tiny company cannot do. David: Yup, great. Ben: Fixed amount of dev work amortized across a large customer base. David: I don't think we need to say any more on this. The whole episode's about scale economies. Ben: Yes. Switching costs. The funny thing about monopoly is there's nothing to switch to. David: That's a good one. This one's pretty related to network economies for me with this one of, okay, sure, you can switch to another operating system. Good luck getting other applications that you know and love to run on that. Ben: Yeah, that's the answer. David: Speaking of network economies, developers, applications, OEMs. Ben: There's not a classic network, Facebook, or AT&T style network here, in terms of one user can contact every other user, but more users being on Windows incentivizes more developers to make great applications for Windows, which enables Microsoft to sell more copies to more users, et cetera. David: Although, actually, I think once they start getting into the enterprise workplaces in general, organizations in general, there is the user network effect, like I want this Microsoft Word document that I just worked on for you to be able to open it and use it too. Ben: You're right. I didn't even think about that. The document formats are a huge network effect thing, even before the Internet. Even before organizations were networked and computers were networked outside of an organization, file formats. You're right, there are huge network economies to file formats. David: Yeah, and it's inter-organizational too. If I'm a law firm, I want my clients to be able to open my Word docs. Ben: Right. David: Okay, next. Ben: Process power. This might be the weakest. David: As it so often is. Ben: It's elusive. This is a little bit later in history, but I did always think it was absolutely incredible when I was at Microsoft, and we would ship a version of Office every three years. I worked on Office 15. The entire 6000 person organization had a process in place, where we could release to manufacturing (RTM) on a date that we planned three years in advance and actually hit it.  The process of the ads cuts meetings, the zero bug bounce, the testing schedule, and the triage when you had things that people wanted to introduce late in the schedule. It was a remarkable product, especially with all these teams that needed all their code to interoperate. I worked on a shared experiences team that would check things and that would be a dependency. Word, Excel, PowerPoint, all of them took on the shared code. We knew our ship date three years in advance and would hit it. It's crazy. David: Totally. This exists. Especially by the time you get to the Windows 95 era at the end of this episode, it's like RenTech. The amount of stuff and process within Microsoft, the device drivers, the middleware, the programming languages, the dev tools, the machine there to make all this computing work, there was a miracle that this stuff worked. You couldn't just recreate that. Ben: It's funny. The process power, I would say, is stronger in Office than Windows. Now my colors are showing. Windows always notoriously miss their ship dates. I'm actually less sure that process power existed in that early days. I think they were a bunch of smart people, but I'm not sure that they had a unique way of creating software. David: I think that got built over time. Ben: Agree. David: Okay, branding, for sure. Ben: For sure. David: Don't get fired for buying Microsoft. Ben: That's true. Windows 95 built a consumer brand. The idea of a consumer brand of operating systems was there was Apple, but they were tiny, and that was more around the hardware. David: It's both fronts. It's their brand in the enterprise that is an amazing story that they built. They were branding consumer. The easiest to point to instantiation is the Rolling Stones and Jay Leno, but they had a software brand. Nobody had that. Ben: But branding is probably the thing that they rely on the least interestingly enough. There are other structural reasons that they're entrenched, where even if Microsoft had a crappy brand in this era, they probably still would have won. The magic of getting the whole deal with the IBM PC and then getting to sell licenses to all the other OEMs. David: That brings us to the last one, which I think is a super strong one at least in this era, cornered resource. DOS, full stop. Ben: Yup. It didn't start as a cornered resource, but as soon as IBM started shipping it on the IBM PCs, it was over. I'll say it again, IBM's distribution created demand for DOS, and then Microsoft just got to capture value from everyone else who wanted it. All right, we would do bear and bull, listeners, but we know what happened after this. The bull case is that the party continues, and Microsoft continues shipping amazing operating systems after amazing operating systems. That stays the important thing in the world. The bear case is something else becomes an important thing in the world. Just having this super locked-in operating system is not actually the way to bet your whole company for the future. David: The dramatic tension for you all to come back for our next episode on Microsoft here is not because you want to find out what happens. Ben: That's true. David: Okay, take away, splinter. We've spent the last probably six weeks deep in this. We've talked to everybody. What are you thinking about in the middle of the night? Ben: The IBM deal. I can't unsee it. Microsoft figured out a way to take someone else's dominance and wholesale transfer that into their dominance for the next generation. The fact that IBM called the Project Chess is so deeply ironic because Bill Gates was playing chess and they played checkers. David: Maybe Bill was playing 3D chess. This is the thing about it, though. We got to give IBM so much credit for Project Chess and the PC, that they even did what they did was huge, that a big entrenched corporation that could ship a skunkworks project in a year, revolutionized the industry. They just didn't end up capturing any value out of it. Ben: If I could make a less cheeky comment on it, I would say it's that a new technology generation, when something becomes possible and opens up a new market, it enables a shift in the point of integration and a value chain.  The old value chain of IBM, if you shipped the mainframe, you had all the power. But in this new world of PCs, if you controlled the operating system that all the users were familiar with and all the developers wanted to target, you had all the power. I think that is not necessarily obvious unless you went through it and have the hindsight of history to be able to articulate it. David: I think you might be right. I think this might be the single best business deal negotiation of all time. Ben: It arguably created $3 trillion of value. David: No, a lot more than that because this is the point about Microsoft being a platform. Microsoft is worth $3 trillion, but how much value has been created on top of Microsoft? No matter what you think, good, bad, or ugly of Microsoft, you can't deny that. Ben: Absolutely. David: At least twice as much, probably much, much more. Ben: You watch every early interview with Bill, and you read a lot of his writing, he's a great writer. It's awesome that so many of his memos leaked whether intentionally or unintentionally over time. David: So many of his memos were issued for publication. Ben: He really did view himself as a steward of the software ecosystem, and had this steadfast belief that software was magic and was going to change the world. Over the next 20 years, from 1975 to 1995, software did change the world, and Microsoft enabled it to happen.  Again, good, bad, or ugly, whatever you think of the company, they were sincere. I think the ugly part is, a lot of people want to hate on the value capture, because god did they capture value, but they were sincere in their desire and ability to create too. David: Totally. That's super related to my takeaway here. The moment for me in the research and then when we're telling the story along the way is when they start to believe in themselves that they don't need IBM. Just the audacity, and I mean that in a pure good way of these kids. These kids changed the world. That's so trite to say. My book we read my daughter at bedtime and somebody gave us, it's like the most Silicon Valley trophy thing ever. It's like, what do you do with an idea? The punchline at the end of it is you change the world. It's become such a trope, but these kids in the 70s did it. They believed in themselves in the beginning and then more and more and more over time. There's just this moment that I think, where they started to really, truly believe that they were going to change the world. Again, good, bad and ugly come out of that. Mostly good, I think, but just the level of ambition and audacity of these people is staggering. Ben: Is that your splinter in your mind? David: That's my splinter, yeah. Ben: Listeners who are new to the show, we've been iterating on how we end episodes. We decided on this recently of, how should we land the plane? It's to talk about the thing that we can't stop thinking about. David: This company's 49 years old, and it's still the most valuable company in the world. Ben: Crazy. All right, David, I have some trivia for you. David: I love it. Trivia before carve outs. Ben: Do you know where Dave Marquardt from TVI first encountered Bill Gates? David: No, I just assumed it was through Steve. Ben: Dave had watched Bill present many years earlier at none other than the Homebrew Computer Club at Stanford, the very place that is part of the Apple lore with Jobs and Woz showing off the early Apple computer. Apparently, Bill also went and made a presentation there and would hang out there, and that is where Dave first came across him. David: Amazing. When we were talking about the letter that Bill writes to the hobbyist community decrying piracy and software, he's basically writing it to the Homebrew Computer Club. He believed that those were the people who were ripping off his software. Ben: It's amazing. All right, carveouts? David: All right, carveouts. For new listeners, at the end of every episode, Ben and I just chat about one or two things that we've been enjoying personally lately that usually have nothing to do with the episode.  In my case, I have two. The first one has a lot to do with the episode. I have discovered/rediscovered the LGR YouTube channel. Are you into this Ben? Ben: No. David: Clint and LGR, and it stands for Lazy Game Reviews, which I think is how it started, but then it became so much more, and now it's just LGR. Clint is this awesome dude, and I think he lives in North Carolina. He is dedicated to basking in the glory, restoring, reliving, and preserving computer history, hardware and software from this era. The YouTube channel is all unboxing a Compaq PC from 1992 or restoring a Windows 3.1 machine. Ben: That's awesome. David: It's so good. He's got the best, most soothing voice in the world. He just seems like such a nice dude. He's dedicated to preserving the era of computing that we are talking about on this episode. It's so fun. Ben: That's cool. It's really hard because all hardware fails eventually. At some point, there will be zero computers out there that can run Windows 3.1 that will boot. The only way to experience any of these things is through an emulator. I don't know. To be able to capture high-res footage and stuff of those machines while they still work, it's cool. David: Yup, super cool. My other carve out is Andre 3000 from Outkast. Do you know what Andre 3000 is up to these days? Ben: Not at all. No. David: Oh, my God. Okay. GQ just did a big interview with Andre 3000 because he just released a new album. This is not what you think. Andre, a lot of people say, consensus top five rappers of all time. Big Boi, his counterpart in Outkast, also great too, but they basically went out on top. They did Speakerboxxx/The Love Below, which was their double album. I think it came out 2004 maybe. I was a freshman in college. Ben: Hey Ya was on that, right? David: Hey Ya, yeah, everything was on that. They did one more album, and then they stopped. Andre would be featured on some other rappers tracks over the years, but didn't put out another album for close to 20 years. He just put out an album, and he just did this big video interview with GQ. The album is a flute album. He got really into woodwind instruments. This has been his life. He reveals in the interview that he has put out other songs and other albums over the years under pseudonyms. This interview is so great. It's so unexpected because the interviewer keeps asking, you're Andre 3000, why'd you stop rapping? I don't have anything to say. Am I going to rap about getting a colonoscopy? This is where my life is right now. I never wanted to put out any work that wasn't both authentic and great. I didn't have anything to say anymore. Ben: Yup, I love that. If you ever heard the phrase, go out when the top row at the back of the auditorium is empty? David: Yeah, and that's what they did. Idlewild which was the album that came out after Speakerboxxx/The Love Below, was great, but it wasn't that, and yet that's exactly what he did. Ben: I think it's a Seinfeld quote. I might misattribute it. Drop a note in the Slack if I did, but I think it's a Seinfeld quote. "You let one row be empty, but you don't want to wait too long." David: Yeah, it's the same thing as what Seinfeld did. Ben: Fascinating. David: Super fun. We'll link to it in the show notes. Ben: All right. I have three and they're all different. We've had a tradition on the recent episodes of doing multiple carveouts, and all of them are different genres. My product that I've really been loving, my physical product is the Meta Ray-Bans. David: Yes. I was talking with the team at Meta about them. They're doing great. Ben: I bet. It's a pretty delightful product. I bought them because I was in Hawaii and with my four month old son. We were in the pool and stuff. My iPhone's waterproof, but I want a different angle, and I don't necessarily want to be holding my phone. It's very cool to be able to take pictures and record video of what I actually see to be able to relive that moment. I did a bunch of photos and video. We were on vacation that way, and then I discovered a thing that they're actually just awesome for. I think even better than AirPods is phone calls. The speakers are great. I wouldn't say necessarily they're the best for listening to music. The bass is obviously not as good as headphone bass. They project the sound down toward your ears. Unless you're standing really close to me, you can't really hear, or unless I have the volume all the way up. The microphones are great too. I was on a long walk on the beach with the wind whipping by on a call with my mom. I was like, does this sound really bad and distorted to you? She's like, not at all. I was really impressed and we'll definitely be using them for more calls. I think that style of headphone over the ear, there are many things that it's not good for. When you're on an airplane or something, you want to plug your ears, or if you're in a super loud environment. But unless you're in one of those environments, it's a nice break for your ears versus having AirPods jammed in. It's a great call experience. So they're great.  The battery's great. It's a four-hour battery, so it's a low key, more subtle, augmented reality experience. There's no heads up display. You don't see anything, but when you get a text message, it'll read it to you. David: There's more than just the camera system. Ben: Totally. It basically is you have AirPods in, but you don't actually have AirPods in, and you have a pretty good photo video camera on your face. David: Does it have an indication when you're taking photo or recording video? Ben: Yes. It's not super bright. I'm not sure everybody really knows when you are, but if you know what to look for, you know if it's on or off. David: Cool. Ben: I've been loving it. I think it's a great product. I intend to wear them a lot this summer.  My second one is a thank you to a very, very good designer, Julia Rundberg, who worked with David and I on a recent project for some design work, some of which is actually featured as we speak on Apple podcasts. She did a bunch of other stuff with us, too, and she's really excellent.  If you're looking for someone who's good at visual identity, branding, slide decks, websites, I've worked with her on a few projects before and she's just awesome, so I wanted to recommend her. My third is this community spotlight to go all the way back to nine years ago Acquired. It was a listener who runs a company called Summer Health reached out and said, I heard you say that you have a baby. I've got this great company that is for new parents, and here's some info on it. I am now a paying member. It is an on-demand texting relationship with a pediatrician. David: Wow. This is crack for new parents. Ben: It is crack for parents. It's crazy. You can hook up multiple phones, so my wife and I both have a direct line to like, something weird is going on, will you help me through it? We had a 2:00 AM wake up the other night. Everything ended up being fine, but as I'm sure any other new parents can relate to, you really want to make sure in the middle of the night, if you're not sure if everything's fine, you would like to figure out the right steps to make sure everything's fine. Having a virtual doctor on demand is totally amazing. Summer Health, if you are a new parent, we've been loving it. David: Amazing. I'm going to have to subscribe. We've referred to this before. I think this will probably be the last episode that comes out while I'm still the parent of just one child. Number two coming soon. If it may take a little longer than usual for the next Microsoft episode to come out, our next six-hour opus on Microsoft, don't get too mad, that is the reason why. Ben: We have a lot of thank yous on this one, as you can imagine. People were really generous with their time, pointing us to different resources, explaining their recollection of history as it happened. Being in Seattle, active in the venture community here, both through PSL and David, you're in my shared history at Madrona, me working at Microsoft, a lot of good opportunities to learn what really happened from folks.  A huge thank you to Mike Slade who spent the time with me. Mike spent two different stints at Microsoft and then at NeXT, and Apple in between. David: Yeah, he worked for Steve at NeXT, right? Ben: Yup. One of the few people in the world who both spent a ton of time with Steve, Bill, and worked closely with both of them. It's so great to get his perspective, especially about the early days of Office and the applications group. Very helpful. Similarly, Pete Higgins worked closely with Mike. Pete, I think, ran Excel for a long time and oversaw a lot of the different stuff in the applications group, and I believe also ran Office. It's funny how many different people picked up the mantle over time as these things traded around groups. But frankly, I think that's a huge part of the Microsoft story. The company very quickly adapted and changed its structure depending on the current needs of technology, competitors, and et cetera. Huge thanks to Tren Griffin, who is actually a lifelong Seattleite and close friend to the whole Gates family. Bill Gates Sr. was his mentor. I'm sure you've seen Tren's prolific tweets online about Microsoft history. Actually, Tren I think currently works at Microsoft in a strategy role. Thanks Tren for your help as well. David, I know you've got a bunch. David: Yes. Also, speaking of former Microsoft folks who are very active and prolific on Twitter, we talked to Steven Sinofsky who had lots and lots of great perspective, and we can't wait to share more of it on the next episode. Ben: I read 20 of Steven's Hardcore Software posts. When David and I were dividing up what belongs in what episode, I realized 19 of them belong in next episode. Steven, thank you for your early prep work for part two. David: So much fun internet stuff to talk with that Steven was right there for. I spoke with other people who ran windows, Terry Myerson who's a great friend and a supporter of the show. Terry ran Windows for quite a long time, right? Ben: Yeah. When I was there, Terry was EVP over Windows and Windows Phone. David: Terry was very generous. He was actually the first person that clued us into just how key Steve's role was in building the enterprise for Microsoft. Ben: And how different the go to market motions were for Windows and Office. I think Terry was the one that gave us the insight of Windows, especially in the early days. It was basically an OEM game, small group doing an OEM thing. David: There were 10 people selling that. Ben: And it's still I don't think a very big team even today. David: Speaking of strategy, Charles Fitzgerald, who's OG in Microsoft and a great platform strategy guy, prolific angel investor in Seattle now, it's fun chatting with him about the early days. Ben: Obviously, Brad Silverberg who we mentioned a bunch. It was very fun seeing after spending some time talking with Brad and texting a lot with him to see the end of the Windows 95 announcement after Bill and Jay Leno are done for Brad to come out and finish it off. It's fun. It's like watching a time machine, watching that thing is really cool.  Soma Somasegar at Madrona is someone that David and I love crossing paths with in the Seattle entrepreneurship ecosystem. David: Soma's just such a legend at Microsoft and in the industry too. There's so many people who Soma made their careers, plucked them out of school, saw something in them that maybe they didn't even see in themselves, and then they went on to be big executives or venture capitalists at Microsoft or elsewhere. Ben: Lastly, huge thank you to Steve Ballmer. To be honest, it was a little bit surreal chatting and hearing about his experience over the whole thing. There's nobody including Bill Gates that bleeds Microsoft more than Steve Ballmer, and his just unabashed pure pride in what they built is infectious. David: Absolutely. It was so fun talking to Steve. He was so gracious with his time. It must have been just super special for you too. He was the CEO when you worked there. Ben: Totally. To be frank, I had a very opposite strategy in mind, but I was a new hire out of college, individual contributor PM. It was still the Windows company then, and Steve was championing the Windows strategy, and I was a guy working on Office for iPad. With that, our huge thank you to JP Morgan Payments, ServiceNow, and Pilot. You can click the link in the show notes to learn more about any of those great partners of Acquired.  If you like this episode, I was thinking of ones to recommend. It would be pretty funny to go listen to the forethought acquisition, given all of this context. It's a short episode when David and I were not good at this yet, and we did our very best. It is from our early days, and it covers overlapping source material. David: Forethought was the company that made PowerPoint, Microsoft acquired, the first major acquisition for the company. Ben: If you are new to the show and looking for great recent episodes that we've done, I highly recommend the Visa one as discussed earlier in the Network of Networks idea, if you haven't heard that, or perhaps the Nintendo or NVIDIA episodes, all of which will be right up your alley if you liked this one. David: If you're not at all interested in technology or software, but have somehow managed to get through all these hours with us, give a listen to our LVMH and Hermes episodes. Even if you do love technology and software, which obviously you do if you're still here, there's so much to learn from that world. Ben: If you want to know every time an episode drops, get hints at the next episode topic, and get episode corrections and follow up, you can sign up at acquired.fm/email. Come discuss this episode with everyone else who's chatting about it at acquired.fm/slack. If you're looking for another episode, go check out our second show, ACQ2, where we will have actually some very awesome tech CEO guests coming out over the next month or so that are absolutely worth listening to, especially if you're interested in semiconductor and tech history. If you want some sweet Acquired merch, go to acquire.fm/store.  With that, listeners, we'll see you next time. David: We'll see you next time.